/* eslint-disable import/no-dynamic-require, node/global-require -- required */
'use strict';
const { ok } = require('assert');
const { join } = require('path');
const compat = require('core-js-compat/data');
let tested = 0;
let PATH;

function load(...path) {
  tested++;
  return require(join(PATH, ...path));
}

for (PATH of ['core-js-pure', 'core-js']) {
  let O;
  ok(load('es/global-this').Math === Math);
  ok(new (load('es/aggregate-error'))([42]).errors[0] === 42);
  ok(load('es/object/assign')({ q: 1 }, { w: 2 }).w === 2);
  ok(load('es/object/create')(Array.prototype) instanceof Array);
  ok(load('es/object/define-property')({}, 'a', { value: 42 }).a === 42);
  ok(load('es/object/define-properties')({}, { a: { value: 42 } }).a === 42);
  ok(load('es/object/freeze')({}));
  ok(load('es/object/get-own-property-descriptor')({ q: 1 }, 'q').enumerable);
  ok(load('es/object/get-own-property-names')({ q: 42 })[0] === 'q');
  ok(load('es/object/get-own-property-symbols')({ [Symbol()]: 42 }).length === 1);
  ok(load('es/object/get-prototype-of')([]) === Array.prototype);
  ok(load('es/object/is')(NaN, NaN));
  ok(load('es/object/is-extensible')({}));
  ok(!load('es/object/is-frozen')({}));
  ok(!load('es/object/is-sealed')({}));
  ok(load('es/object/keys')({ q: 0 })[0] === 'q');
  ok(load('es/object/prevent-extensions')({}));
  ok(load('es/object/seal')({}));
  ok(load('es/object/set-prototype-of')({}, []) instanceof Array);
  ok(load('es/object/to-string')([]) === '[object Array]');
  ok(load('es/object/entries')({ q: 2 })[0][0] === 'q');
  ok(load('es/object/from-entries')([['a', 42]]).a === 42);
  ok(load('es/object/values')({ q: 2 })[0] === 2);
  ok(load('es/object/get-own-property-descriptors')({ q: 1 }).q.enumerable);
  ok(typeof load('es/object/define-getter') === 'function');
  ok(typeof load('es/object/define-setter') === 'function');
  ok(typeof load('es/object/lookup-getter') === 'function');
  ok(typeof load('es/object/lookup-setter') === 'function');
  ok('values' in load('es/object'));
  load('es/function/name');
  load('es/function/has-instance');
  ok(Function[load('es/symbol/has-instance')](it => it));
  load('es/function');
  ok(Array.isArray(load('es/array/from')('qwe')));
  ok(Array.isArray(load('es/array/of')('q', 'w', 'e')));
  ok(load('es/array/join')('qwe', 1) === 'q1w1e');
  ok(load('es/array/slice')('qwe', 1)[1] === 'e');
  ok(load('es/array/sort')([1, 3, 2])[1] === 2);
  ok(typeof load('es/array/for-each') === 'function');
  ok(typeof load('es/array/map') === 'function');
  ok(typeof load('es/array/filter') === 'function');
  ok(typeof load('es/array/flat') === 'function');
  ok(typeof load('es/array/flat-map') === 'function');
  ok(typeof load('es/array/some') === 'function');
  ok(typeof load('es/array/every') === 'function');
  ok(typeof load('es/array/reduce') === 'function');
  ok(typeof load('es/array/reduce-right') === 'function');
  ok(typeof load('es/array/reverse') === 'function');
  ok(typeof load('es/array/index-of') === 'function');
  ok(typeof load('es/array/last-index-of') === 'function');
  ok(load('es/array/concat')([1, 2, 3], [4, 5, 6]).length === 6);
  ok(load('es/array/copy-within')([1, 2, 3, 4, 5], 0, 3)[0] === 4);
  ok('next' in load('es/array/entries')([]));
  ok(load('es/array/fill')(Array(5), 2)[0] === 2);
  ok(load('es/array/find')([2, 3, 4], it => it % 2) === 3);
  ok(load('es/array/find-index')([2, 3, 4], it => it % 2) === 1);
  ok('next' in load('es/array/keys')([]));
  ok('next' in load('es/array/values')([]));
  ok(load('es/array/includes')([1, 2, 3], 2));
  ok('next' in load('es/array/iterator')([]));
  ok(load('es/array/virtual/join').call('qwe', 1) === 'q1w1e');
  ok(load('es/array/virtual/slice').call('qwe', 1)[1] === 'e');
  ok(load('es/array/virtual/splice').call([1, 2, 3], 1, 2)[0] === 2);
  ok(load('es/array/virtual/sort').call([1, 3, 2])[1] === 2);
  ok(typeof load('es/array/virtual/for-each') === 'function');
  ok(typeof load('es/array/virtual/map') === 'function');
  ok(typeof load('es/array/virtual/filter') === 'function');
  ok(typeof load('es/array/virtual/flat') === 'function');
  ok(typeof load('es/array/virtual/flat-map') === 'function');
  ok(typeof load('es/array/virtual/some') === 'function');
  ok(typeof load('es/array/virtual/every') === 'function');
  ok(typeof load('es/array/virtual/reduce') === 'function');
  ok(typeof load('es/array/virtual/reduce-right') === 'function');
  ok(typeof load('es/array/virtual/reverse') === 'function');
  ok(typeof load('es/array/virtual/index-of') === 'function');
  ok(typeof load('es/array/virtual/last-index-of') === 'function');
  ok(load('es/array/virtual/concat').call([1, 2, 3], [4, 5, 6]).length === 6);
  ok(load('es/array/virtual/copy-within').call([1, 2, 3, 4, 5], 0, 3)[0] === 4);
  ok('next' in load('es/array/virtual/entries').call([]));
  ok(load('es/array/virtual/fill').call(Array(5), 2)[0] === 2);
  ok(load('es/array/virtual/find').call([2, 3, 4], it => it % 2) === 3);
  ok(load('es/array/virtual/find-index').call([2, 3, 4], it => it % 2) === 1);
  ok('next' in load('es/array/virtual/keys').call([]));
  ok('next' in load('es/array/virtual/values').call([]));
  ok(load('es/array/virtual/includes').call([1, 2, 3], 2));
  ok('next' in load('es/array/virtual/iterator').call([]));
  ok('from' in load('es/array'));
  ok(load('es/array/splice')([1, 2, 3], 1, 2)[0] === 2);
  ok(load('es/math/acosh')(1) === 0);
  ok(Object.is(load('es/math/asinh')(-0), -0));
  ok(load('es/math/atanh')(1) === Infinity);
  ok(load('es/math/cbrt')(-8) === -2);
  ok(load('es/math/clz32')(0) === 32);
  ok(load('es/math/cosh')(0) === 1);
  ok(load('es/math/expm1')(-Infinity) === -1);
  ok(load('es/math/fround')(0) === 0);
  ok(load('es/math/hypot')(3, 4) === 5);
  ok(load('es/math/imul')(2, 2) === 4);
  ok(load('es/math/log10')(-0) === -Infinity);
  ok(load('es/math/log1p')(-1) === -Infinity);
  ok(load('es/math/log2')(1) === 0);
  ok(load('es/math/sign')(-2) === -1);
  ok(Object.is(load('es/math/sinh')(-0), -0));
  ok(load('es/math/tanh')(Infinity) === 1);
  ok(load('es/math/to-string-tag') === 'Math');
  ok(load('es/math/trunc')(1.5) === 1);
  ok(load('es/number/constructor')('5') === 5);
  ok(load('es/number/epsilon') === 2 ** -52);
  ok(load('es/number/is-finite')(42.5));
  ok(load('es/number/is-integer')(42.5) === false);
  ok(load('es/number/is-nan')(NaN));
  ok(load('es/number/is-safe-integer')(42));
  ok(load('es/number/max-safe-integer') === 0x1FFFFFFFFFFFFF);
  ok(load('es/number/min-safe-integer') === -0x1FFFFFFFFFFFFF);
  ok(load('es/number/parse-float')('1.5') === 1.5);
  ok(load('es/number/parse-int')('2.1') === 2);
  ok(load('es/number/to-fixed')(1, 1) === '1.0');
  ok(load('es/number/to-precision')(1) === '1');
  ok(load('es/parse-float')('1.5') === 1.5);
  ok(load('es/parse-int')('2.1') === 2);
  ok(load('es/number/virtual/to-fixed').call(1, 1) === '1.0');
  ok(load('es/number/virtual/to-precision').call(1) === '1');
  ok('isNaN' in load('es/number'));
  ok(load('es/reflect/apply')((a, b) => a + b, null, [1, 2]) === 3);
  ok(load('es/reflect/construct')(function () {
    return this.a = 2;
  }, []).a === 2);
  load('es/reflect/define-property')(O = {}, 'a', { value: 42 });
  ok(O.a === 42);
  ok(load('es/reflect/delete-property')({ q: 1 }, 'q'));
  ok(load('es/reflect/get')({ q: 1 }, 'q') === 1);
  ok(load('es/reflect/get-own-property-descriptor')({ q: 1 }, 'q').enumerable);
  ok(load('es/reflect/get-prototype-of')([]) === Array.prototype);
  ok(load('es/reflect/has')({ q: 1 }, 'q'));
  ok(load('es/reflect/is-extensible')({}));
  ok(load('es/reflect/own-keys')({ q: 1 })[0] === 'q');
  ok(load('es/reflect/prevent-extensions')({}));
  ok(load('es/reflect/set')({}, 'a', 42));
  load('es/reflect/set-prototype-of')(O = {}, []);
  ok(load('es/reflect/to-string-tag') === 'Reflect');
  ok(O instanceof Array);
  ok('has' in load('es/reflect'));
  ok(load('es/string/from-code-point')(97) === 'a');
  ok(load('es/string/raw')({ raw: 'test' }, 0, 1, 2) === 't0e1s2t');
  ok(load('es/string/trim')(' ab ') === 'ab');
  ok(load('es/string/trim-start')(' a ') === 'a ');
  ok(load('es/string/trim-end')(' a ') === ' a');
  ok(load('es/string/trim-left')(' a ') === 'a ');
  ok(load('es/string/trim-right')(' a ') === ' a');
  ok(load('es/string/code-point-at')('a', 0) === 97);
  ok(load('es/string/ends-with')('qwe', 'we'));
  ok(load('es/string/includes')('qwe', 'w'));
  ok(load('es/string/repeat')('q', 3) === 'qqq');
  ok(load('es/string/starts-with')('qwe', 'qw'));
  ok(typeof load('es/string/anchor') === 'function');
  ok(typeof load('es/string/big') === 'function');
  ok(typeof load('es/string/blink') === 'function');
  ok(typeof load('es/string/bold') === 'function');
  ok(typeof load('es/string/fixed') === 'function');
  ok(typeof load('es/string/fontcolor') === 'function');
  ok(typeof load('es/string/fontsize') === 'function');
  ok(typeof load('es/string/italics') === 'function');
  ok(typeof load('es/string/link') === 'function');
  ok(typeof load('es/string/small') === 'function');
  ok(typeof load('es/string/strike') === 'function');
  ok(typeof load('es/string/sub') === 'function');
  ok(typeof load('es/string/sup') === 'function');
  ok(typeof load('es/string/replace-all') === 'function');
  ok(load('es/string/pad-start')('a', 3) === '  a');
  ok(load('es/string/pad-end')('a', 3) === 'a  ');
  ok('next' in load('es/string/iterator')('qwe'));
  ok(load('es/string/virtual/code-point-at').call('a', 0) === 97);
  ok(load('es/string/virtual/ends-with').call('qwe', 'we'));
  ok(load('es/string/virtual/includes').call('qwe', 'w'));
  ok(typeof load('es/string/virtual/match-all') === 'function');
  ok(typeof load('es/string/virtual/replace-all') === 'function');
  ok(load('es/string/virtual/repeat').call('q', 3) === 'qqq');
  ok(load('es/string/virtual/starts-with').call('qwe', 'qw'));
  ok(load('es/string/virtual/trim').call(' ab ') === 'ab');
  ok(load('es/string/virtual/trim-start').call(' a ') === 'a ');
  ok(load('es/string/virtual/trim-end').call(' a ') === ' a');
  ok(load('es/string/virtual/trim-left').call(' a ') === 'a ');
  ok(load('es/string/virtual/trim-right').call(' a ') === ' a');
  ok(typeof load('es/string/virtual/anchor') === 'function');
  ok(typeof load('es/string/virtual/big') === 'function');
  ok(typeof load('es/string/virtual/blink') === 'function');
  ok(typeof load('es/string/virtual/bold') === 'function');
  ok(typeof load('es/string/virtual/fixed') === 'function');
  ok(typeof load('es/string/virtual/fontcolor') === 'function');
  ok(typeof load('es/string/virtual/fontsize') === 'function');
  ok(typeof load('es/string/virtual/italics') === 'function');
  ok(typeof load('es/string/virtual/link') === 'function');
  ok(typeof load('es/string/virtual/small') === 'function');
  ok(typeof load('es/string/virtual/strike') === 'function');
  ok(typeof load('es/string/virtual/sub') === 'function');
  ok(typeof load('es/string/virtual/sup') === 'function');
  ok(load('es/string/virtual/pad-start').call('a', 3) === '  a');
  ok(load('es/string/virtual/pad-end').call('a', 3) === 'a  ');
  ok('next' in load('es/string/virtual/iterator').call('qwe'));
  ok('raw' in load('es/string'));
  ok(String(load('es/regexp/constructor')('a', 'g')) === '/a/g');
  ok(load('es/regexp/to-string')(/./g) === '/./g');
  ok(load('es/regexp/flags')(/./g) === 'g');
  ok(typeof load('es/regexp/match') === 'function');
  ok(typeof load('es/regexp/replace') === 'function');
  ok(typeof load('es/regexp/search') === 'function');
  ok(typeof load('es/regexp/split') === 'function');
  ok(typeof load('es/regexp/sticky') === 'function');
  ok(typeof load('es/regexp/test') === 'function');
  load('es/regexp');
  ok(load('es/json').stringify([1]) === '[1]');
  ok(load('es/json/stringify')([1]) === '[1]');
  ok(load('es/json/to-string-tag') === 'JSON');
  ok(typeof load('es/date/to-primitive')(new Date(), 'number') === 'number');
  ok(typeof load('es/date/to-iso-string')(new Date()) === 'string');
  ok(load('es/date/to-json')(Infinity) === null);
  ok(load('es/date'));
  ok(load('es/symbol/has-instance'));
  ok(load('es/symbol/is-concat-spreadable'));
  ok(load('es/symbol/iterator'));
  ok(load('es/symbol/match'));
  ok(load('es/symbol/match-all'));
  ok(load('es/symbol/replace'));
  ok(load('es/symbol/search'));
  ok(load('es/symbol/species'));
  ok(load('es/symbol/split'));
  ok(load('es/symbol/to-primitive'));
  ok(load('es/symbol/to-string-tag'));
  ok(load('es/symbol/unscopables'));
  ok(load('es/symbol/async-iterator'));
  load('es/symbol/description');
  ok(typeof load('es/symbol/for') === 'function');
  ok(typeof load('es/symbol/key-for') === 'function');
  ok('iterator' in load('es/symbol'));
  let Map = load('es/map');
  let Set = load('es/set');
  let WeakMap = load('es/weak-map');
  let WeakSet = load('es/weak-set');
  ok(new Map([[1, 2], [3, 4]]).size === 2);
  ok(new Set([1, 2, 3, 2, 1]).size === 3);
  ok(new WeakMap([[O = {}, 42]]).get(O) === 42);
  ok(new WeakSet([O = {}]).has(O));
  let Promise = load('es/promise/constructor');
  ok('then' in Promise.prototype);
  ok(load('es/promise/all')([1, 2, 3]) instanceof Promise);
  ok(load('es/promise/all-settled')([1, 2, 3]) instanceof Promise);
  ok(load('es/promise/any')([1, 2, 3]) instanceof Promise);
  ok(load('es/promise/catch')(new Promise(it => it), it => it) instanceof Promise);
  ok(load('es/promise/finally')(new Promise(it => it), it => it) instanceof Promise);
  ok(load('es/promise/race')([1, 2, 3]) instanceof Promise);
  ok(load('es/promise/reject')(1).then(it => it, error => error) instanceof Promise);
  ok(load('es/promise/resolve')(1) instanceof Promise);
  ok(load('es/promise') === Promise);

  ok(load('stable/global-this').Math === Math);
  ok(new (load('stable/aggregate-error'))([42]).errors[0] === 42);
  ok(load('stable/object/assign')({ q: 1 }, { w: 2 }).w === 2);
  ok(load('stable/object/create')(Array.prototype) instanceof Array);
  ok(load('stable/object/define-property')({}, 'a', { value: 42 }).a === 42);
  ok(load('stable/object/define-properties')({}, { a: { value: 42 } }).a === 42);
  ok(load('stable/object/freeze')({}));
  ok(load('stable/object/get-own-property-descriptor')({ q: 1 }, 'q').enumerable);
  ok(load('stable/object/get-own-property-names')({ q: 42 })[0] === 'q');
  ok(load('stable/object/get-own-property-symbols')({ [Symbol()]: 42 }).length === 1);
  ok(load('stable/object/get-prototype-of')([]) === Array.prototype);
  ok(load('stable/object/is')(NaN, NaN));
  ok(load('stable/object/is-extensible')({}));
  ok(!load('stable/object/is-frozen')({}));
  ok(!load('stable/object/is-sealed')({}));
  ok(load('stable/object/keys')({ q: 0 })[0] === 'q');
  ok(load('stable/object/prevent-extensions')({}));
  ok(load('stable/object/seal')({}));
  ok(load('stable/object/set-prototype-of')({}, []) instanceof Array);
  ok(load('stable/object/to-string')([]) === '[object Array]');
  ok(load('stable/object/entries')({ q: 2 })[0][0] === 'q');
  ok(load('stable/object/from-entries')([['a', 42]]).a === 42);
  ok(load('stable/object/values')({ q: 2 })[0] === 2);
  ok(load('stable/object/get-own-property-descriptors')({ q: 1 }).q.enumerable);
  ok(typeof load('stable/object/define-getter') === 'function');
  ok(typeof load('stable/object/define-setter') === 'function');
  ok(typeof load('stable/object/lookup-getter') === 'function');
  ok(typeof load('stable/object/lookup-setter') === 'function');
  ok('values' in load('stable/object'));
  load('stable/function/name');
  load('stable/function/has-instance');
  ok(Function[load('stable/symbol/has-instance')](it => it));
  load('stable/function');
  ok(Array.isArray(load('stable/array/from')('qwe')));
  ok(Array.isArray(load('stable/array/of')('q', 'w', 'e')));
  ok(load('stable/array/join')('qwe', 1) === 'q1w1e');
  ok(load('stable/array/slice')('qwe', 1)[1] === 'e');
  ok(load('stable/array/sort')([1, 3, 2])[1] === 2);
  ok(typeof load('stable/array/for-each') === 'function');
  ok(typeof load('stable/array/map') === 'function');
  ok(typeof load('stable/array/filter') === 'function');
  ok(typeof load('stable/array/flat') === 'function');
  ok(typeof load('stable/array/flat-map') === 'function');
  ok(typeof load('stable/array/some') === 'function');
  ok(typeof load('stable/array/every') === 'function');
  ok(typeof load('stable/array/reduce') === 'function');
  ok(typeof load('stable/array/reduce-right') === 'function');
  ok(typeof load('stable/array/reverse') === 'function');
  ok(typeof load('stable/array/index-of') === 'function');
  ok(typeof load('stable/array/last-index-of') === 'function');
  ok(load('stable/array/concat')([1, 2, 3], [4, 5, 6]).length === 6);
  ok(load('stable/array/copy-within')([1, 2, 3, 4, 5], 0, 3)[0] === 4);
  ok('next' in load('stable/array/entries')([]));
  ok(load('stable/array/fill')(Array(5), 2)[0] === 2);
  ok(load('stable/array/find')([2, 3, 4], it => it % 2) === 3);
  ok(load('stable/array/find-index')([2, 3, 4], it => it % 2) === 1);
  ok('next' in load('stable/array/keys')([]));
  ok('next' in load('stable/array/values')([]));
  ok(load('stable/array/includes')([1, 2, 3], 2));
  ok('next' in load('stable/array/iterator')([]));
  ok(load('stable/array/virtual/join').call('qwe', 1) === 'q1w1e');
  ok(load('stable/array/virtual/slice').call('qwe', 1)[1] === 'e');
  ok(load('stable/array/virtual/splice').call([1, 2, 3], 1, 2)[0] === 2);
  ok(load('stable/array/virtual/sort').call([1, 3, 2])[1] === 2);
  ok(typeof load('stable/array/virtual/for-each') === 'function');
  ok(typeof load('stable/array/virtual/map') === 'function');
  ok(typeof load('stable/array/virtual/filter') === 'function');
  ok(typeof load('stable/array/virtual/flat') === 'function');
  ok(typeof load('stable/array/virtual/flat-map') === 'function');
  ok(typeof load('stable/array/virtual/some') === 'function');
  ok(typeof load('stable/array/virtual/every') === 'function');
  ok(typeof load('stable/array/virtual/reduce') === 'function');
  ok(typeof load('stable/array/virtual/reduce-right') === 'function');
  ok(typeof load('stable/array/virtual/reverse') === 'function');
  ok(typeof load('stable/array/virtual/index-of') === 'function');
  ok(typeof load('stable/array/virtual/last-index-of') === 'function');
  ok(load('stable/array/virtual/concat').call([1, 2, 3], [4, 5, 6]).length === 6);
  ok(load('stable/array/virtual/copy-within').call([1, 2, 3, 4, 5], 0, 3)[0] === 4);
  ok('next' in load('stable/array/virtual/entries').call([]));
  ok(load('stable/array/virtual/fill').call(Array(5), 2)[0] === 2);
  ok(load('stable/array/virtual/find').call([2, 3, 4], it => it % 2) === 3);
  ok(load('stable/array/virtual/find-index').call([2, 3, 4], it => it % 2) === 1);
  ok('next' in load('stable/array/virtual/keys').call([]));
  ok('next' in load('stable/array/virtual/values').call([]));
  ok(load('stable/array/virtual/includes').call([1, 2, 3], 2));
  ok('next' in load('stable/array/virtual/iterator').call([]));
  ok('from' in load('stable/array'));
  ok(load('stable/array/splice')([1, 2, 3], 1, 2)[0] === 2);
  ok(load('stable/math/acosh')(1) === 0);
  ok(Object.is(load('stable/math/asinh')(-0), -0));
  ok(load('stable/math/atanh')(1) === Infinity);
  ok(load('stable/math/cbrt')(-8) === -2);
  ok(load('stable/math/clz32')(0) === 32);
  ok(load('stable/math/cosh')(0) === 1);
  ok(load('stable/math/expm1')(-Infinity) === -1);
  ok(load('stable/math/fround')(0) === 0);
  ok(load('stable/math/hypot')(3, 4) === 5);
  ok(load('stable/math/imul')(2, 2) === 4);
  ok(load('stable/math/log10')(-0) === -Infinity);
  ok(load('stable/math/log1p')(-1) === -Infinity);
  ok(load('stable/math/log2')(1) === 0);
  ok(load('stable/math/sign')(-2) === -1);
  ok(Object.is(load('stable/math/sinh')(-0), -0));
  ok(load('stable/math/tanh')(Infinity) === 1);
  ok(load('stable/math/to-string-tag') === 'Math');
  ok(load('stable/math/trunc')(1.5) === 1);
  ok(load('stable/number/constructor')('5') === 5);
  ok(load('stable/number/epsilon') === 2 ** -52);
  ok(load('stable/number/is-finite')(42.5));
  ok(load('stable/number/is-integer')(42.5) === false);
  ok(load('stable/number/is-nan')(NaN));
  ok(load('stable/number/is-safe-integer')(42));
  ok(load('stable/number/max-safe-integer') === 0x1FFFFFFFFFFFFF);
  ok(load('stable/number/min-safe-integer') === -0x1FFFFFFFFFFFFF);
  ok(load('stable/number/parse-float')('1.5') === 1.5);
  ok(load('stable/number/parse-int')('2.1') === 2);
  ok(load('stable/number/to-fixed')(1, 1) === '1.0');
  ok(load('stable/number/to-precision')(1) === '1');
  ok(load('stable/parse-float')('1.5') === 1.5);
  ok(load('stable/parse-int')('2.1') === 2);
  ok(load('stable/number/virtual/to-fixed').call(1, 1) === '1.0');
  ok(load('stable/number/virtual/to-precision').call(1) === '1');
  ok('isNaN' in load('stable/number'));
  ok(load('stable/reflect/apply')((a, b) => a + b, null, [1, 2]) === 3);
  ok(load('stable/reflect/construct')(function () {
    return this.a = 2;
  }, []).a === 2);
  load('stable/reflect/define-property')(O = {}, 'a', { value: 42 });
  ok(O.a === 42);
  ok(load('stable/reflect/delete-property')({ q: 1 }, 'q'));
  ok(load('stable/reflect/get')({ q: 1 }, 'q') === 1);
  ok(load('stable/reflect/get-own-property-descriptor')({ q: 1 }, 'q').enumerable);
  ok(load('stable/reflect/get-prototype-of')([]) === Array.prototype);
  ok(load('stable/reflect/has')({ q: 1 }, 'q'));
  ok(load('stable/reflect/is-extensible')({}));
  ok(load('stable/reflect/own-keys')({ q: 1 })[0] === 'q');
  ok(load('stable/reflect/prevent-extensions')({}));
  ok(load('stable/reflect/set')({}, 'a', 42));
  load('stable/reflect/set-prototype-of')(O = {}, []);
  ok(load('stable/reflect/to-string-tag') === 'Reflect');
  ok(O instanceof Array);
  ok('has' in load('stable/reflect'));
  ok(load('stable/string/from-code-point')(97) === 'a');
  ok(load('stable/string/raw')({ raw: 'test' }, 0, 1, 2) === 't0e1s2t');
  ok(load('stable/string/trim')(' ab ') === 'ab');
  ok(load('stable/string/code-point-at')('a', 0) === 97);
  ok(load('stable/string/ends-with')('qwe', 'we'));
  ok(load('stable/string/includes')('qwe', 'w'));
  ok(load('stable/string/repeat')('q', 3) === 'qqq');
  ok('next' in load('stable/string/match-all')('a', /./g));
  ok(load('stable/string/starts-with')('qwe', 'qw'));
  ok(typeof load('stable/string/anchor') === 'function');
  ok(typeof load('stable/string/big') === 'function');
  ok(typeof load('stable/string/blink') === 'function');
  ok(typeof load('stable/string/bold') === 'function');
  ok(typeof load('stable/string/fixed') === 'function');
  ok(typeof load('stable/string/fontcolor') === 'function');
  ok(typeof load('stable/string/fontsize') === 'function');
  ok(typeof load('stable/string/italics') === 'function');
  ok(typeof load('stable/string/link') === 'function');
  ok(typeof load('stable/string/small') === 'function');
  ok(typeof load('stable/string/strike') === 'function');
  ok(typeof load('stable/string/sub') === 'function');
  ok(typeof load('stable/string/sup') === 'function');
  ok(typeof load('stable/string/replace-all') === 'function');
  ok(load('stable/string/pad-start')('a', 3) === '  a');
  ok(load('stable/string/pad-end')('a', 3) === 'a  ');
  ok(load('stable/string/trim-start')(' a ') === 'a ');
  ok(load('stable/string/trim-end')(' a ') === ' a');
  ok(load('stable/string/trim-left')(' a ') === 'a ');
  ok(load('stable/string/trim-right')(' a ') === ' a');
  ok('next' in load('stable/string/iterator')('qwe'));
  ok(load('stable/string/virtual/code-point-at').call('a', 0) === 97);
  ok(load('stable/string/virtual/ends-with').call('qwe', 'we'));
  ok(load('stable/string/virtual/includes').call('qwe', 'w'));
  ok(typeof load('stable/string/virtual/match-all') === 'function');
  ok(typeof load('stable/string/virtual/replace-all') === 'function');
  ok(load('stable/string/virtual/repeat').call('q', 3) === 'qqq');
  ok(load('stable/string/virtual/starts-with').call('qwe', 'qw'));
  ok(typeof load('stable/string/virtual/anchor') === 'function');
  ok(typeof load('stable/string/virtual/big') === 'function');
  ok(typeof load('stable/string/virtual/blink') === 'function');
  ok(typeof load('stable/string/virtual/bold') === 'function');
  ok(typeof load('stable/string/virtual/fixed') === 'function');
  ok(typeof load('stable/string/virtual/fontcolor') === 'function');
  ok(typeof load('stable/string/virtual/fontsize') === 'function');
  ok(typeof load('stable/string/virtual/italics') === 'function');
  ok(typeof load('stable/string/virtual/link') === 'function');
  ok(typeof load('stable/string/virtual/small') === 'function');
  ok(typeof load('stable/string/virtual/strike') === 'function');
  ok(typeof load('stable/string/virtual/sub') === 'function');
  ok(typeof load('stable/string/virtual/sup') === 'function');
  ok(load('stable/string/virtual/pad-start').call('a', 3) === '  a');
  ok(load('stable/string/virtual/pad-end').call('a', 3) === 'a  ');
  ok(load('stable/string/virtual/trim-start').call(' a ') === 'a ');
  ok(load('stable/string/virtual/trim-end').call(' a ') === ' a');
  ok(load('stable/string/virtual/trim-left').call(' a ') === 'a ');
  ok(load('stable/string/virtual/trim-right').call(' a ') === ' a');
  ok('next' in load('stable/string/virtual/iterator').call('qwe'));
  ok('raw' in load('stable/string'));
  ok(String(load('stable/regexp/constructor')('a', 'g')) === '/a/g');
  ok(load('stable/regexp/to-string')(/./g) === '/./g');
  ok(load('stable/regexp/flags')(/./g) === 'g');
  ok(typeof load('stable/regexp/match') === 'function');
  ok(typeof load('stable/regexp/replace') === 'function');
  ok(typeof load('stable/regexp/search') === 'function');
  ok(typeof load('stable/regexp/split') === 'function');
  ok(typeof load('stable/regexp/sticky') === 'function');
  ok(typeof load('stable/regexp/test') === 'function');
  load('stable/regexp');
  ok(load('stable/json').stringify([1]) === '[1]');
  ok(load('stable/json/stringify')([1]) === '[1]');
  ok(load('stable/json/to-string-tag') === 'JSON');
  ok(typeof load('stable/date/to-primitive')(new Date(), 'number') === 'number');
  ok(typeof load('stable/date/to-iso-string')(new Date()) === 'string');
  ok(load('stable/date/to-json')(Infinity) === null);
  ok(load('stable/date'));
  load('stable/symbol/description');
  ok(load('stable/symbol/has-instance'));
  ok(load('stable/symbol/is-concat-spreadable'));
  ok(load('stable/symbol/iterator'));
  ok(load('stable/symbol/match'));
  ok(load('stable/symbol/match-all'));
  ok(load('stable/symbol/replace'));
  ok(load('stable/symbol/search'));
  ok(load('stable/symbol/species'));
  ok(load('stable/symbol/split'));
  ok(load('stable/symbol/to-primitive'));
  ok(load('stable/symbol/to-string-tag'));
  ok(load('stable/symbol/unscopables'));
  ok(load('stable/symbol/async-iterator'));
  ok(typeof load('stable/symbol/for') === 'function');
  ok(typeof load('stable/symbol/key-for') === 'function');
  ok('iterator' in load('stable/symbol'));
  Map = load('stable/map');
  Set = load('stable/set');
  WeakMap = load('stable/weak-map');
  WeakSet = load('stable/weak-set');
  ok(new Map([[1, 2], [3, 4]]).size === 2);
  ok(new Set([1, 2, 3, 2, 1]).size === 3);
  ok(new WeakMap([[O = {}, 42]]).get(O) === 42);
  ok(new WeakSet([O = {}]).has(O));
  Promise = load('stable/promise/constructor');
  ok('then' in Promise.prototype);
  ok(load('stable/promise/all')([1, 2, 3]) instanceof Promise);
  ok(load('stable/promise/all-settled')([1, 2, 3]) instanceof Promise);
  ok(load('stable/promise/any')([1, 2, 3]) instanceof Promise);
  ok(load('stable/promise/catch')(new Promise(it => it), it => it) instanceof Promise);
  ok(load('stable/promise/finally')(new Promise(it => it), it => it) instanceof Promise);
  ok(load('stable/promise/race')([1, 2, 3]) instanceof Promise);
  ok(load('stable/promise/reject')(1).then(it => it, error => error) instanceof Promise);
  ok(load('stable/promise/resolve')(1) instanceof Promise);
  ok(load('stable/promise') === Promise);
  ok(typeof load('stable/dom-collections').iterator === 'function');
  ok(typeof load('stable/dom-collections/for-each') === 'function');
  ok(typeof load('stable/dom-collections/iterator') === 'function');
  ok(typeof load('stable/set-timeout') === 'function');
  ok(typeof load('stable/set-interval') === 'function');
  ok(typeof load('stable/set-immediate') === 'function');
  ok(typeof load('stable/clear-immediate') === 'function');
  ok(typeof load('stable/queue-microtask') === 'function');
  ok(typeof load('stable/url') === 'function');
  load('stable/url/to-json');
  ok(typeof load('stable/url-search-params') === 'function');
  ok(load('stable'));

  ok(load('actual/global-this').Math === Math);
  ok(new (load('actual/aggregate-error'))([42]).errors[0] === 42);
  ok(load('actual/object/assign')({ q: 1 }, { w: 2 }).w === 2);
  ok(load('actual/object/create')(Array.prototype) instanceof Array);
  ok(load('actual/object/define-property')({}, 'a', { value: 42 }).a === 42);
  ok(load('actual/object/define-properties')({}, { a: { value: 42 } }).a === 42);
  ok(load('actual/object/freeze')({}));
  ok(load('actual/object/get-own-property-descriptor')({ q: 1 }, 'q').enumerable);
  ok(load('actual/object/get-own-property-names')({ q: 42 })[0] === 'q');
  ok(load('actual/object/get-own-property-symbols')({ [Symbol()]: 42 }).length === 1);
  ok(load('actual/object/get-prototype-of')([]) === Array.prototype);
  ok(load('actual/object/is')(NaN, NaN));
  ok(load('actual/object/is-extensible')({}));
  ok(!load('actual/object/is-frozen')({}));
  ok(!load('actual/object/is-sealed')({}));
  ok(load('actual/object/keys')({ q: 0 })[0] === 'q');
  ok(load('actual/object/prevent-extensions')({}));
  ok(load('actual/object/seal')({}));
  ok(load('actual/object/set-prototype-of')({}, []) instanceof Array);
  ok(load('actual/object/to-string')([]) === '[object Array]');
  ok(load('actual/object/entries')({ q: 2 })[0][0] === 'q');
  ok(load('actual/object/from-entries')([['a', 42]]).a === 42);
  ok(load('actual/object/values')({ q: 2 })[0] === 2);
  ok(load('actual/object/get-own-property-descriptors')({ q: 1 }).q.enumerable);
  ok(typeof load('actual/object/define-getter') === 'function');
  ok(typeof load('actual/object/define-setter') === 'function');
  ok(typeof load('actual/object/lookup-getter') === 'function');
  ok(typeof load('actual/object/lookup-setter') === 'function');
  ok('values' in load('actual/object'));
  load('actual/function/name');
  load('actual/function/has-instance');
  ok(Function[load('actual/symbol/has-instance')](it => it));
  load('actual/function');
  ok(Array.isArray(load('actual/array/from')('qwe')));
  ok(Array.isArray(load('actual/array/of')('q', 'w', 'e')));
  ok(load('actual/array/join')('qwe', 1) === 'q1w1e');
  ok(load('actual/array/slice')('qwe', 1)[1] === 'e');
  ok(load('actual/array/sort')([1, 3, 2])[1] === 2);
  ok(typeof load('actual/array/for-each') === 'function');
  ok(typeof load('actual/array/map') === 'function');
  ok(typeof load('actual/array/filter') === 'function');
  ok(typeof load('actual/array/flat') === 'function');
  ok(typeof load('actual/array/flat-map') === 'function');
  ok(typeof load('actual/array/some') === 'function');
  ok(typeof load('actual/array/every') === 'function');
  ok(typeof load('actual/array/reduce') === 'function');
  ok(typeof load('actual/array/reduce-right') === 'function');
  ok(typeof load('actual/array/reverse') === 'function');
  ok(typeof load('actual/array/index-of') === 'function');
  ok(typeof load('actual/array/last-index-of') === 'function');
  ok(load('actual/array/concat')([1, 2, 3], [4, 5, 6]).length === 6);
  ok(load('actual/array/copy-within')([1, 2, 3, 4, 5], 0, 3)[0] === 4);
  ok('next' in load('actual/array/entries')([]));
  ok(load('actual/array/fill')(Array(5), 2)[0] === 2);
  ok(load('actual/array/find')([2, 3, 4], it => it % 2) === 3);
  ok(load('actual/array/find-index')([2, 3, 4], it => it % 2) === 1);
  ok('next' in load('actual/array/keys')([]));
  ok('next' in load('actual/array/values')([]));
  ok(load('actual/array/includes')([1, 2, 3], 2));
  ok('next' in load('actual/array/iterator')([]));
  ok(load('actual/array/virtual/join').call('qwe', 1) === 'q1w1e');
  ok(load('actual/array/virtual/slice').call('qwe', 1)[1] === 'e');
  ok(load('actual/array/virtual/splice').call([1, 2, 3], 1, 2)[0] === 2);
  ok(load('actual/array/virtual/sort').call([1, 3, 2])[1] === 2);
  ok(typeof load('actual/array/virtual/for-each') === 'function');
  ok(typeof load('actual/array/virtual/map') === 'function');
  ok(typeof load('actual/array/virtual/filter') === 'function');
  ok(typeof load('actual/array/virtual/flat') === 'function');
  ok(typeof load('actual/array/virtual/flat-map') === 'function');
  ok(typeof load('actual/array/virtual/some') === 'function');
  ok(typeof load('actual/array/virtual/every') === 'function');
  ok(typeof load('actual/array/virtual/reduce') === 'function');
  ok(typeof load('actual/array/virtual/reduce-right') === 'function');
  ok(typeof load('actual/array/virtual/reverse') === 'function');
  ok(typeof load('actual/array/virtual/index-of') === 'function');
  ok(typeof load('actual/array/virtual/last-index-of') === 'function');
  ok(load('actual/array/virtual/concat').call([1, 2, 3], [4, 5, 6]).length === 6);
  ok(load('actual/array/virtual/copy-within').call([1, 2, 3, 4, 5], 0, 3)[0] === 4);
  ok('next' in load('actual/array/virtual/entries').call([]));
  ok(load('actual/array/virtual/fill').call(Array(5), 2)[0] === 2);
  ok(load('actual/array/virtual/find').call([2, 3, 4], it => it % 2) === 3);
  ok(load('actual/array/virtual/find-index').call([2, 3, 4], it => it % 2) === 1);
  ok('next' in load('actual/array/virtual/keys').call([]));
  ok('next' in load('actual/array/virtual/values').call([]));
  ok(load('actual/array/virtual/includes').call([1, 2, 3], 2));
  ok('next' in load('actual/array/virtual/iterator').call([]));
  ok('from' in load('actual/array'));
  ok(load('actual/array/splice')([1, 2, 3], 1, 2)[0] === 2);
  ok(load('actual/math/acosh')(1) === 0);
  ok(Object.is(load('actual/math/asinh')(-0), -0));
  ok(load('actual/math/atanh')(1) === Infinity);
  ok(load('actual/math/cbrt')(-8) === -2);
  ok(load('actual/math/clz32')(0) === 32);
  ok(load('actual/math/cosh')(0) === 1);
  ok(load('actual/math/expm1')(-Infinity) === -1);
  ok(load('actual/math/fround')(0) === 0);
  ok(load('actual/math/hypot')(3, 4) === 5);
  ok(load('actual/math/imul')(2, 2) === 4);
  ok(load('actual/math/log10')(-0) === -Infinity);
  ok(load('actual/math/log1p')(-1) === -Infinity);
  ok(load('actual/math/log2')(1) === 0);
  ok(load('actual/math/sign')(-2) === -1);
  ok(Object.is(load('actual/math/sinh')(-0), -0));
  ok(load('actual/math/tanh')(Infinity) === 1);
  ok(load('actual/math/to-string-tag') === 'Math');
  ok(load('actual/math/trunc')(1.5) === 1);
  ok(load('actual/number/constructor')('5') === 5);
  ok(load('actual/number/epsilon') === 2 ** -52);
  ok(load('actual/number/is-finite')(42.5));
  ok(load('actual/number/is-integer')(42.5) === false);
  ok(load('actual/number/is-nan')(NaN));
  ok(load('actual/number/is-safe-integer')(42));
  ok(load('actual/number/max-safe-integer') === 0x1FFFFFFFFFFFFF);
  ok(load('actual/number/min-safe-integer') === -0x1FFFFFFFFFFFFF);
  ok(load('actual/number/parse-float')('1.5') === 1.5);
  ok(load('actual/number/parse-int')('2.1') === 2);
  ok(load('actual/number/to-fixed')(1, 1) === '1.0');
  ok(load('actual/number/to-precision')(1) === '1');
  ok(load('actual/parse-float')('1.5') === 1.5);
  ok(load('actual/parse-int')('2.1') === 2);
  ok(load('actual/number/virtual/to-fixed').call(1, 1) === '1.0');
  ok(load('actual/number/virtual/to-precision').call(1) === '1');
  ok('isNaN' in load('actual/number'));
  ok(load('actual/reflect/apply')((a, b) => a + b, null, [1, 2]) === 3);
  ok(load('actual/reflect/construct')(function () {
    return this.a = 2;
  }, []).a === 2);
  load('actual/reflect/define-property')(O = {}, 'a', { value: 42 });
  ok(O.a === 42);
  ok(load('actual/reflect/delete-property')({ q: 1 }, 'q'));
  ok(load('actual/reflect/get')({ q: 1 }, 'q') === 1);
  ok(load('actual/reflect/get-own-property-descriptor')({ q: 1 }, 'q').enumerable);
  ok(load('actual/reflect/get-prototype-of')([]) === Array.prototype);
  ok(load('actual/reflect/has')({ q: 1 }, 'q'));
  ok(load('actual/reflect/is-extensible')({}));
  ok(load('actual/reflect/own-keys')({ q: 1 })[0] === 'q');
  ok(load('actual/reflect/prevent-extensions')({}));
  ok(load('actual/reflect/set')({}, 'a', 42));
  load('actual/reflect/set-prototype-of')(O = {}, []);
  ok(load('actual/reflect/to-string-tag') === 'Reflect');
  ok(O instanceof Array);
  ok('has' in load('actual/reflect'));
  ok(load('actual/string/from-code-point')(97) === 'a');
  ok(load('actual/string/raw')({ raw: 'test' }, 0, 1, 2) === 't0e1s2t');
  ok(load('actual/string/trim')(' ab ') === 'ab');
  ok(load('actual/string/code-point-at')('a', 0) === 97);
  ok(load('actual/string/ends-with')('qwe', 'we'));
  ok(load('actual/string/includes')('qwe', 'w'));
  ok(load('actual/string/repeat')('q', 3) === 'qqq');
  ok('next' in load('actual/string/match-all')('a', /./g));
  ok(load('actual/string/starts-with')('qwe', 'qw'));
  ok(typeof load('actual/string/anchor') === 'function');
  ok(typeof load('actual/string/big') === 'function');
  ok(typeof load('actual/string/blink') === 'function');
  ok(typeof load('actual/string/bold') === 'function');
  ok(typeof load('actual/string/fixed') === 'function');
  ok(typeof load('actual/string/fontcolor') === 'function');
  ok(typeof load('actual/string/fontsize') === 'function');
  ok(typeof load('actual/string/italics') === 'function');
  ok(typeof load('actual/string/link') === 'function');
  ok(typeof load('actual/string/small') === 'function');
  ok(typeof load('actual/string/strike') === 'function');
  ok(typeof load('actual/string/sub') === 'function');
  ok(typeof load('actual/string/sup') === 'function');
  ok(typeof load('actual/string/replace-all') === 'function');
  ok(load('actual/string/pad-start')('a', 3) === '  a');
  ok(load('actual/string/pad-end')('a', 3) === 'a  ');
  ok(load('actual/string/trim-start')(' a ') === 'a ');
  ok(load('actual/string/trim-end')(' a ') === ' a');
  ok(load('actual/string/trim-left')(' a ') === 'a ');
  ok(load('actual/string/trim-right')(' a ') === ' a');
  ok('next' in load('actual/string/iterator')('qwe'));
  ok(load('actual/string/virtual/code-point-at').call('a', 0) === 97);
  ok(load('actual/string/virtual/ends-with').call('qwe', 'we'));
  ok(load('actual/string/virtual/includes').call('qwe', 'w'));
  ok(typeof load('actual/string/virtual/match-all') === 'function');
  ok(typeof load('actual/string/virtual/replace-all') === 'function');
  ok(load('actual/string/virtual/repeat').call('q', 3) === 'qqq');
  ok(load('actual/string/virtual/starts-with').call('qwe', 'qw'));
  ok(typeof load('actual/string/virtual/anchor') === 'function');
  ok(typeof load('actual/string/virtual/big') === 'function');
  ok(typeof load('actual/string/virtual/blink') === 'function');
  ok(typeof load('actual/string/virtual/bold') === 'function');
  ok(typeof load('actual/string/virtual/fixed') === 'function');
  ok(typeof load('actual/string/virtual/fontcolor') === 'function');
  ok(typeof load('actual/string/virtual/fontsize') === 'function');
  ok(typeof load('actual/string/virtual/italics') === 'function');
  ok(typeof load('actual/string/virtual/link') === 'function');
  ok(typeof load('actual/string/virtual/small') === 'function');
  ok(typeof load('actual/string/virtual/strike') === 'function');
  ok(typeof load('actual/string/virtual/sub') === 'function');
  ok(typeof load('actual/string/virtual/sup') === 'function');
  ok(load('actual/string/virtual/pad-start').call('a', 3) === '  a');
  ok(load('actual/string/virtual/pad-end').call('a', 3) === 'a  ');
  ok(load('actual/string/virtual/trim-start').call(' a ') === 'a ');
  ok(load('actual/string/virtual/trim-end').call(' a ') === ' a');
  ok(load('actual/string/virtual/trim-left').call(' a ') === 'a ');
  ok(load('actual/string/virtual/trim-right').call(' a ') === ' a');
  ok('next' in load('actual/string/virtual/iterator').call('qwe'));
  ok('raw' in load('actual/string'));
  ok(String(load('actual/regexp/constructor')('a', 'g')) === '/a/g');
  ok(load('actual/regexp/to-string')(/./g) === '/./g');
  ok(load('actual/regexp/flags')(/./g) === 'g');
  ok(typeof load('actual/regexp/match') === 'function');
  ok(typeof load('actual/regexp/replace') === 'function');
  ok(typeof load('actual/regexp/search') === 'function');
  ok(typeof load('actual/regexp/split') === 'function');
  ok(typeof load('actual/regexp/sticky') === 'function');
  ok(typeof load('actual/regexp/test') === 'function');
  load('actual/regexp');
  ok(load('actual/json').stringify([1]) === '[1]');
  ok(load('actual/json/stringify')([1]) === '[1]');
  ok(load('actual/json/to-string-tag') === 'JSON');
  ok(typeof load('actual/date/to-primitive')(new Date(), 'number') === 'number');
  ok(typeof load('actual/date/to-iso-string')(new Date()) === 'string');
  ok(load('actual/date/to-json')(Infinity) === null);
  ok(load('actual/date'));
  load('actual/symbol/description');
  ok(load('actual/symbol/has-instance'));
  ok(load('actual/symbol/is-concat-spreadable'));
  ok(load('actual/symbol/iterator'));
  ok(load('actual/symbol/match'));
  ok(load('actual/symbol/match-all'));
  ok(load('actual/symbol/replace'));
  ok(load('actual/symbol/search'));
  ok(load('actual/symbol/species'));
  ok(load('actual/symbol/split'));
  ok(load('actual/symbol/to-primitive'));
  ok(load('actual/symbol/to-string-tag'));
  ok(load('actual/symbol/unscopables'));
  ok(load('actual/symbol/async-iterator'));
  ok(typeof load('actual/symbol/for') === 'function');
  ok(typeof load('actual/symbol/key-for') === 'function');
  ok('iterator' in load('actual/symbol'));
  Map = load('actual/map');
  Set = load('actual/set');
  WeakMap = load('actual/weak-map');
  WeakSet = load('actual/weak-set');
  ok(new Map([[1, 2], [3, 4]]).size === 2);
  ok(new Set([1, 2, 3, 2, 1]).size === 3);
  ok(new WeakMap([[O = {}, 42]]).get(O) === 42);
  ok(new WeakSet([O = {}]).has(O));
  Promise = load('actual/promise/constructor');
  ok('then' in Promise.prototype);
  ok(load('actual/promise/all')([1, 2, 3]) instanceof Promise);
  ok(load('actual/promise/all-settled')([1, 2, 3]) instanceof Promise);
  ok(load('actual/promise/any')([1, 2, 3]) instanceof Promise);
  ok(load('actual/promise/catch')(new Promise(it => it), it => it) instanceof Promise);
  ok(load('actual/promise/finally')(new Promise(it => it), it => it) instanceof Promise);
  ok(load('actual/promise/race')([1, 2, 3]) instanceof Promise);
  ok(load('actual/promise/reject')(1).then(it => it, error => error) instanceof Promise);
  ok(load('actual/promise/resolve')(1) instanceof Promise);
  ok(load('actual/promise') === Promise);
  ok(typeof load('actual/dom-collections').iterator === 'function');
  ok(typeof load('actual/dom-collections/for-each') === 'function');
  ok(typeof load('actual/dom-collections/iterator') === 'function');
  ok(typeof load('actual/set-timeout') === 'function');
  ok(typeof load('actual/set-interval') === 'function');
  ok(typeof load('actual/set-immediate') === 'function');
  ok(typeof load('actual/clear-immediate') === 'function');
  ok(typeof load('actual/queue-microtask') === 'function');
  ok(typeof load('actual/url') === 'function');
  load('actual/url/to-json');
  ok(typeof load('actual/url-search-params') === 'function');
  ok(load('actual'));

  ok(load('full/global-this').Math === Math);
  ok(new (load('full/aggregate-error'))([42]).errors[0] === 42);
  ok(load('full/object/assign')({ q: 1 }, { w: 2 }).w === 2);
  ok(load('full/object/create')(Array.prototype) instanceof Array);
  ok(load('full/object/define-property')({}, 'a', { value: 42 }).a === 42);
  ok(load('full/object/define-properties')({}, { a: { value: 42 } }).a === 42);
  ok(load('full/object/freeze')({}));
  ok(load('full/object/get-own-property-descriptor')({ q: 1 }, 'q').enumerable);
  ok(load('full/object/get-own-property-names')({ q: 42 })[0] === 'q');
  ok(load('full/object/get-own-property-symbols')({ [Symbol()]: 42 }).length === 1);
  ok(load('full/object/get-prototype-of')([]) === Array.prototype);
  ok(load('full/object/is')(NaN, NaN));
  ok(load('full/object/is-extensible')({}));
  ok(!load('full/object/is-frozen')({}));
  ok(!load('full/object/is-sealed')({}));
  ok(load('full/object/keys')({ q: 0 })[0] === 'q');
  ok(load('full/object/prevent-extensions')({}));
  ok(load('full/object/seal')({}));
  ok(load('full/object/set-prototype-of')({}, []) instanceof Array);
  ok(load('full/object/to-string')([]) === '[object Array]');
  ok(load('full/object/entries')({ q: 2 })[0][0] === 'q');
  ok(load('full/object/from-entries')([['a', 42]]).a === 42);
  ok(load('full/object/values')({ q: 2 })[0] === 2);
  ok(load('full/object/get-own-property-descriptors')({ q: 1 }).q.enumerable);
  ok(typeof load('full/object/define-getter') === 'function');
  ok(typeof load('full/object/define-setter') === 'function');
  ok(typeof load('full/object/lookup-getter') === 'function');
  ok(typeof load('full/object/lookup-setter') === 'function');
  ok('values' in load('full/object'));
  load('full/function/name');
  load('full/function/has-instance');
  ok(Function[load('full/symbol/has-instance')](it => it));
  load('full/function');
  ok(typeof load('full/array/is-template-object') === 'function');
  ok(Array.isArray(load('full/array/from')('qwe')));
  ok(Array.isArray(load('full/array/of')('q', 'w', 'e')));
  ok(load('full/array/at')([1, 2, 3], -2) === 2);
  ok(load('full/array/join')('qwe', 1) === 'q1w1e');
  ok(load('full/array/slice')('qwe', 1)[1] === 'e');
  ok(load('full/array/sort')([1, 3, 2])[1] === 2);
  ok(typeof load('full/array/for-each') === 'function');
  ok(typeof load('full/array/map') === 'function');
  ok(typeof load('full/array/filter') === 'function');
  ok(typeof load('full/array/filter-out') === 'function');
  ok(typeof load('full/array/flat') === 'function');
  ok(typeof load('full/array/flat-map') === 'function');
  ok(typeof load('full/array/some') === 'function');
  ok(typeof load('full/array/every') === 'function');
  ok(typeof load('full/array/reduce') === 'function');
  ok(typeof load('full/array/reduce-right') === 'function');
  ok(typeof load('full/array/reverse') === 'function');
  ok(typeof load('full/array/index-of') === 'function');
  ok(typeof load('full/array/last-index-of') === 'function');
  ok(load('full/array/concat')([1, 2, 3], [4, 5, 6]).length === 6);
  ok(load('full/array/copy-within')([1, 2, 3, 4, 5], 0, 3)[0] === 4);
  ok(load('full/array/splice')([1, 2, 3], 1, 2)[0] === 2);
  ok('next' in load('full/array/entries')([]));
  load('full/array/last-item');
  load('full/array/last-index');
  ok(load('full/array/fill')(Array(5), 2)[0] === 2);
  ok(load('full/array/find')([2, 3, 4], it => it % 2) === 3);
  ok(load('full/array/find-index')([2, 3, 4], it => it % 2) === 1);
  ok(load('full/array/find-last')([1, 2, 3], it => it % 2) === 3);
  ok(load('full/array/find-last-index')([1, 2, 3], it => it % 2) === 2);
  ok('next' in load('full/array/keys')([]));
  ok('next' in load('full/array/values')([]));
  ok(load('full/array/includes')([1, 2, 3], 2));
  ok('next' in load('full/array/iterator')([]));
  ok(typeof load('full/array/unique-by') === 'function');
  ok(load('full/array/virtual/at').call([1, 2, 3], -2) === 2);
  ok(load('full/array/virtual/join').call('qwe', 1) === 'q1w1e');
  ok(load('full/array/virtual/slice').call('qwe', 1)[1] === 'e');
  ok(load('full/array/virtual/splice').call([1, 2, 3], 1, 2)[0] === 2);
  ok(load('full/array/virtual/sort').call([1, 3, 2])[1] === 2);
  ok(typeof load('full/array/virtual/for-each') === 'function');
  ok(typeof load('full/array/virtual/map') === 'function');
  ok(typeof load('full/array/virtual/filter') === 'function');
  ok(typeof load('full/array/virtual/filter-out') === 'function');
  ok(typeof load('full/array/virtual/flat') === 'function');
  ok(typeof load('full/array/virtual/flat-map') === 'function');
  ok(typeof load('full/array/virtual/some') === 'function');
  ok(typeof load('full/array/virtual/every') === 'function');
  ok(typeof load('full/array/virtual/reduce') === 'function');
  ok(typeof load('full/array/virtual/reduce-right') === 'function');
  ok(typeof load('full/array/virtual/reverse') === 'function');
  ok(typeof load('full/array/virtual/index-of') === 'function');
  ok(typeof load('full/array/virtual/last-index-of') === 'function');
  ok(load('full/array/virtual/concat').call([1, 2, 3], [4, 5, 6]).length === 6);
  ok(load('full/array/virtual/copy-within').call([1, 2, 3, 4, 5], 0, 3)[0] === 4);
  ok('next' in load('full/array/virtual/entries').call([]));
  ok(load('full/array/virtual/fill').call(Array(5), 2)[0] === 2);
  ok(load('full/array/virtual/find').call([2, 3, 4], it => it % 2) === 3);
  ok(load('full/array/virtual/find-index').call([2, 3, 4], it => it % 2) === 1);
  ok(load('full/array/virtual/find-last').call([1, 2, 3], it => it % 2) === 3);
  ok(load('full/array/virtual/find-last-index').call([1, 2, 3], it => it % 2) === 2);
  ok('next' in load('full/array/virtual/keys').call([]));
  ok('next' in load('full/array/virtual/values').call([]));
  ok(load('full/array/virtual/includes').call([1, 2, 3], 2));
  ok('next' in load('full/array/virtual/iterator').call([]));
  ok(typeof load('full/array/virtual/unique-by') === 'function');
  ok('from' in load('full/array'));
  load('full/bigint/range');
  load('full/bigint');
  ok(load('full/math/acosh')(1) === 0);
  ok(Object.is(load('full/math/asinh')(-0), -0));
  ok(load('full/math/atanh')(1) === Infinity);
  ok(load('full/math/cbrt')(-8) === -2);
  ok(load('full/math/clz32')(0) === 32);
  ok(load('full/math/cosh')(0) === 1);
  ok(load('full/math/expm1')(-Infinity) === -1);
  ok(load('full/math/fround')(0) === 0);
  ok(load('full/math/hypot')(3, 4) === 5);
  ok(load('full/math/imul')(2, 2) === 4);
  ok(load('full/math/log10')(-0) === -Infinity);
  ok(load('full/math/log1p')(-1) === -Infinity);
  ok(load('full/math/log2')(1) === 0);
  ok(load('full/math/sign')(-2) === -1);
  ok(Object.is(load('full/math/sinh')(-0), -0));
  ok(load('full/math/tanh')(Infinity) === 1);
  ok(load('full/math/to-string-tag') === 'Math');
  ok(load('full/math/trunc')(1.5) === 1);
  ok(load('full/math/clamp')(6, 2, 4) === 4);
  ok(load('full/math/deg-per-rad') === Math.PI / 180);
  ok(load('full/math/degrees')(Math.PI) === 180);
  ok(load('full/math/fscale')(3, 1, 2, 1, 2) === 3);
  ok(load('full/math/rad-per-deg') === 180 / Math.PI);
  ok(load('full/math/radians')(180) === Math.PI);
  ok(load('full/math/scale')(3, 1, 2, 1, 2) === 3);
  ok(load('full/math/signbit')(-2) === true);
  ok(load('full/number/constructor')('5') === 5);
  ok(load('full/number/epsilon') === 2 ** -52);
  ok(load('full/number/is-finite')(42.5));
  ok(load('full/number/is-integer')(42.5) === false);
  ok(load('full/number/is-nan')(NaN));
  ok(load('full/number/is-safe-integer')(42));
  ok(load('full/number/max-safe-integer') === 0x1FFFFFFFFFFFFF);
  ok(load('full/number/min-safe-integer') === -0x1FFFFFFFFFFFFF);
  ok(load('full/number/parse-float')('1.5') === 1.5);
  ok(load('full/number/parse-int')('2.1') === 2);
  ok(load('full/number/to-fixed')(1, 1) === '1.0');
  ok(load('full/number/to-precision')(1) === '1');
  ok(load('full/number/from-string')('12', 3) === 5);
  ok(load('full/number/range')(1, 2).next().value === 1);
  ok(load('full/parse-float')('1.5') === 1.5);
  ok(load('full/parse-int')('2.1') === 2);
  ok(load('full/number/virtual/to-fixed').call(1, 1) === '1.0');
  ok(load('full/number/virtual/to-precision').call(1) === '1');
  ok('isNaN' in load('full/number'));
  ok(load('full/reflect/apply')((a, b) => a + b, null, [1, 2]) === 3);
  ok(load('full/reflect/construct')(function () {
    return this.a = 2;
  }, []).a === 2);
  load('full/reflect/define-property')(O = {}, 'a', { value: 42 });
  ok(O.a === 42);
  ok(load('full/reflect/delete-property')({ q: 1 }, 'q'));
  ok(load('full/reflect/get')({ q: 1 }, 'q') === 1);
  ok(load('full/reflect/get-own-property-descriptor')({ q: 1 }, 'q').enumerable);
  ok(load('full/reflect/get-prototype-of')([]) === Array.prototype);
  ok(load('full/reflect/has')({ q: 1 }, 'q'));
  ok(load('full/reflect/is-extensible')({}));
  ok(load('full/reflect/own-keys')({ q: 1 })[0] === 'q');
  ok(load('full/reflect/prevent-extensions')({}));
  ok(load('full/reflect/set')({}, 'a', 42));
  load('full/reflect/set-prototype-of')(O = {}, []);
  ok(load('full/reflect/to-string-tag') === 'Reflect');
  ok(O instanceof Array);
  ok(typeof load('full/reflect/define-metadata') === 'function');
  ok(typeof load('full/reflect/delete-metadata') === 'function');
  ok(typeof load('full/reflect/get-metadata') === 'function');
  ok(typeof load('full/reflect/get-metadata-keys') === 'function');
  ok(typeof load('full/reflect/get-own-metadata') === 'function');
  ok(typeof load('full/reflect/get-own-metadata-keys') === 'function');
  ok(typeof load('full/reflect/has-metadata') === 'function');
  ok(typeof load('full/reflect/has-own-metadata') === 'function');
  ok(typeof load('full/reflect/metadata') === 'function');
  ok('has' in load('full/reflect'));
  ok(load('full/string/from-code-point')(97) === 'a');
  ok(load('full/string/raw')({ raw: 'test' }, 0, 1, 2) === 't0e1s2t');
  ok(load('full/string/trim')(' ab ') === 'ab');
  ok(load('full/string/code-point-at')('a', 0) === 97);
  ok(load('full/string/ends-with')('qwe', 'we'));
  ok(load('full/string/includes')('qwe', 'w'));
  ok(load('full/string/repeat')('q', 3) === 'qqq');
  ok(load('full/string/starts-with')('qwe', 'qw'));
  ok(typeof load('full/string/anchor') === 'function');
  ok(typeof load('full/string/big') === 'function');
  ok(typeof load('full/string/blink') === 'function');
  ok(typeof load('full/string/bold') === 'function');
  ok(typeof load('full/string/fixed') === 'function');
  ok(typeof load('full/string/fontcolor') === 'function');
  ok(typeof load('full/string/fontsize') === 'function');
  ok(typeof load('full/string/italics') === 'function');
  ok(typeof load('full/string/link') === 'function');
  ok(typeof load('full/string/small') === 'function');
  ok(typeof load('full/string/strike') === 'function');
  ok(typeof load('full/string/sub') === 'function');
  ok(typeof load('full/string/sup') === 'function');
  ok(load('full/string/at')('a', 0) === 'a');
  ok('next' in load('full/string/code-points')('a'));
  ok(load('full/string/pad-start')('a', 3) === '  a');
  ok(load('full/string/pad-end')('a', 3) === 'a  ');
  ok(load('full/string/trim-start')(' a ') === 'a ');
  ok(load('full/string/trim-end')(' a ') === ' a');
  ok(load('full/string/trim-left')(' a ') === 'a ');
  ok(load('full/string/trim-right')(' a ') === ' a');
  ok('next' in load('full/string/match-all')('a', /./g));
  ok(typeof load('full/string/replace-all') === 'function');
  ok('next' in load('full/string/iterator')('qwe'));
  ok(load('full/string/virtual/code-point-at').call('a', 0) === 97);
  ok(load('full/string/virtual/ends-with').call('qwe', 'we'));
  ok(load('full/string/virtual/includes').call('qwe', 'w'));
  ok(load('full/string/virtual/repeat').call('q', 3) === 'qqq');
  ok(load('full/string/virtual/starts-with').call('qwe', 'qw'));
  ok(typeof load('full/string/virtual/anchor') === 'function');
  ok(typeof load('full/string/virtual/big') === 'function');
  ok(typeof load('full/string/virtual/blink') === 'function');
  ok(typeof load('full/string/virtual/bold') === 'function');
  ok(typeof load('full/string/virtual/fixed') === 'function');
  ok(typeof load('full/string/virtual/fontcolor') === 'function');
  ok(typeof load('full/string/virtual/fontsize') === 'function');
  ok(typeof load('full/string/virtual/italics') === 'function');
  ok(typeof load('full/string/virtual/link') === 'function');
  ok(typeof load('full/string/virtual/small') === 'function');
  ok(typeof load('full/string/virtual/strike') === 'function');
  ok(typeof load('full/string/virtual/sub') === 'function');
  ok(typeof load('full/string/virtual/sup') === 'function');
  ok(load('full/string/virtual/at').call('a', 0) === 'a');
  ok('next' in load('full/string/virtual/code-points').call('a'));
  ok(load('full/string/virtual/pad-start').call('a', 3) === '  a');
  ok(load('full/string/virtual/pad-end').call('a', 3) === 'a  ');
  ok(load('full/string/virtual/trim-start').call(' a ') === 'a ');
  ok(load('full/string/virtual/trim-end').call(' a ') === ' a');
  ok(load('full/string/virtual/trim-left').call(' a ') === 'a ');
  ok(load('full/string/virtual/trim-right').call(' a ') === ' a');
  ok('next' in load('full/string/virtual/match-all').call('a', /./g));
  ok(typeof load('full/string/virtual/replace-all') === 'function');
  ok('next' in load('full/string/virtual/iterator').call('qwe'));
  ok('raw' in load('full/string'));
  ok(String(load('full/regexp/constructor')('a', 'g')) === '/a/g');
  ok(load('full/regexp/to-string')(/./g) === '/./g');
  ok(load('full/regexp/flags')(/./g) === 'g');
  ok(typeof load('full/regexp/match') === 'function');
  ok(typeof load('full/regexp/replace') === 'function');
  ok(typeof load('full/regexp/search') === 'function');
  ok(typeof load('full/regexp/split') === 'function');
  ok(typeof load('full/regexp/sticky') === 'function');
  ok(typeof load('full/regexp/test') === 'function');
  load('full/regexp');
  ok(load('full/json').stringify([1]) === '[1]');
  ok(load('full/json/stringify')([1]) === '[1]');
  ok(load('full/json/to-string-tag') === 'JSON');
  ok(typeof load('full/date/to-primitive')(new Date(), 'number') === 'number');
  ok(typeof load('full/date/to-iso-string')(new Date()) === 'string');
  ok(load('full/date/to-json')(Infinity) === null);
  ok(load('full/date'));
  load('full/symbol/description');
  ok(load('full/symbol/has-instance'));
  ok(load('full/symbol/is-concat-spreadable'));
  ok(load('full/symbol/iterator'));
  ok(load('full/symbol/match'));
  ok(load('full/symbol/match-all'));
  ok(load('full/symbol/replace'));
  ok(load('full/symbol/search'));
  ok(load('full/symbol/species'));
  ok(load('full/symbol/split'));
  ok(load('full/symbol/to-primitive'));
  ok(load('full/symbol/to-string-tag'));
  ok(load('full/symbol/unscopables'));
  ok(load('full/symbol/async-iterator'));
  ok(load('full/symbol/observable'));
  ok(load('full/symbol/async-dispose'));
  ok(load('full/symbol/dispose'));
  ok(typeof load('full/symbol/for') === 'function');
  ok(typeof load('full/symbol/key-for') === 'function');
  ok('iterator' in load('full/symbol'));
  Map = load('full/map');
  Set = load('full/set');
  WeakMap = load('full/weak-map');
  WeakSet = load('full/weak-set');
  ok(new Map([[1, 2], [3, 4]]).size === 2);
  ok(new Set([1, 2, 3, 2, 1]).size === 3);
  ok(new WeakMap([[O = {}, 42]]).get(O) === 42);
  ok(new WeakSet([O = {}]).has(O));
  ok(load('full/map/of')([1, 2], [3, 4]) instanceof Map);
  ok(load('full/set/of')(1, 2, 3, 2, 1) instanceof Set);
  ok(load('full/weak-map/of')([{}, 1], [[], 2]) instanceof WeakMap);
  ok(load('full/weak-set/of')({}, []) instanceof WeakSet);
  ok(load('full/map/from')([[1, 2], [3, 4]]) instanceof Map);
  ok(load('full/set/from')([1, 2, 3, 2, 1]) instanceof Set);
  ok(load('full/weak-map/from')([[{}, 1], [[], 2]]) instanceof WeakMap);
  ok(load('full/weak-set/from')([{}, []]) instanceof WeakSet);
  ok(load('full/map/delete-all')(new Map(), 1, 2) === false);
  ok(load('full/map/emplace')(new Map([[1, 2]]), 1, { update: it => it ** 2 }) === 4);
  ok(load('full/map/every')(new Map([[1, 2], [2, 3], [3, 4]]), it => it % 2) === false);
  ok(load('full/map/filter')(new Map([[1, 2], [2, 3], [3, 4]]), it => it % 2).size === 1);
  ok(load('full/map/find')(new Map([[1, 2], [2, 3], [3, 4]]), it => it % 2) === 3);
  ok(load('full/map/find-key')(new Map([[1, 2], [2, 3], [3, 4]]), it => it % 2) === 2);
  ok(load('full/map/group-by')([], it => it) instanceof Map);
  ok(load('full/map/includes')(new Map([[1, 2]]), 2), true);
  ok(load('full/map/key-by')([], it => it) instanceof Map);
  ok(load('full/map/key-of')(new Map([[1, 2]]), 2), 1);
  ok(load('full/map/map-keys')(new Map([[1, 2], [2, 3], [3, 4]]), it => it).size === 3);
  ok(load('full/map/map-values')(new Map([[1, 2], [2, 3], [3, 4]]), it => it).size === 3);
  ok(load('full/map/merge')(new Map([[1, 2], [2, 3]]), [[2, 4], [4, 5]]).size === 3);
  ok(load('full/map/reduce')(new Map([[1, 2], [2, 3], [3, 4]]), (a, b) => a + b) === 9);
  ok(load('full/map/some')(new Map([[1, 2], [2, 3], [3, 4]]), it => it % 2) === true);
  ok(load('full/map/update')(new Map([[1, 2]]), 1, it => it * 2).get(1) === 4);
  ok(load('full/set/add-all')(new Set([1, 2, 3]), 4, 5).size === 5);
  ok(load('full/set/delete-all')(new Set([1, 2, 3]), 4, 5) === false);
  ok(load('full/set/difference')(new Set([1, 2, 3]), [3, 4, 5]).size === 2);
  ok(load('full/set/every')(new Set([1, 2, 3]), it => typeof it == 'number'));
  ok(load('full/set/filter')(new Set([1, 2, 3]), it => it % 2).size === 2);
  ok(load('full/set/find')(new Set([2, 3, 4]), it => it % 2) === 3);
  ok(load('full/set/intersection')(new Set([1, 2, 3]), [1, 3, 4]).size === 2);
  ok(load('full/set/is-disjoint-from')(new Set([1, 2, 3]), [4, 5, 6]));
  ok(load('full/set/is-subset-of')(new Set([1, 2, 3]), [1, 2, 3, 4]));
  ok(load('full/set/is-superset-of')(new Set([1, 2, 3, 4]), [1, 2, 3]));
  ok(load('full/set/join')(new Set([1, 2, 3])) === '1,2,3');
  ok(load('full/set/map')(new Set([1, 2, 3]), it => it % 2).size === 2);
  ok(load('full/set/reduce')(new Set([1, 2, 3]), (it, v) => it + v) === 6);
  ok(load('full/set/some')(new Set([1, 2, 3]), it => typeof it == 'number'));
  ok(load('full/set/symmetric-difference')(new Set([1, 2, 3]), [3, 4, 5]).size === 4);
  ok(load('full/set/union')(new Set([1, 2, 3]), [3, 4, 5]).size === 5);
  ok(load('full/weak-map/delete-all')(new WeakMap(), [], {}) === false);
  ok(load('full/weak-map/emplace')(new WeakMap(), {}, { insert: () => ({ a: 42 }) }).a === 42);
  ok(load('full/weak-set/add-all')(new WeakSet(), [], {}) instanceof WeakSet);
  ok(load('full/weak-set/delete-all')(new WeakSet(), [], {}) === false);
  Promise = load('full/promise/constructor');
  ok('then' in Promise.prototype);
  ok(load('full/promise/all')([1, 2, 3]) instanceof Promise);
  ok(load('full/promise/all-settled')([1, 2, 3]) instanceof Promise);
  ok(load('full/promise/any')([1, 2, 3]) instanceof Promise);
  ok(load('full/promise/catch')(new Promise(it => it), it => it) instanceof Promise);
  ok(load('full/promise/finally')(new Promise(it => it), it => it) instanceof Promise);
  ok(load('full/promise/race')([1, 2, 3]) instanceof Promise);
  ok(load('full/promise/reject')(1).then(it => it, error => error) instanceof Promise);
  ok(load('full/promise/resolve')(1) instanceof Promise);
  ok(load('full/promise/try')(() => 42) instanceof Promise);
  ok(load('full/promise') === Promise);
  ok('from' in load('full/observable'));
  ok(typeof load('full/dom-collections').iterator === 'function');
  ok(typeof load('full/dom-collections/for-each') === 'function');
  ok(typeof load('full/dom-collections/iterator') === 'function');
  ok(typeof load('full/set-timeout') === 'function');
  ok(typeof load('full/set-interval') === 'function');
  ok(typeof load('full/set-immediate') === 'function');
  ok(typeof load('full/clear-immediate') === 'function');
  ok(typeof load('full/queue-microtask') === 'function');
  ok(typeof load('full/composite-key')({}, 1, {}) === 'object');
  ok(typeof load('full/composite-symbol')({}, 1, {}) === 'symbol');
  ok(typeof load('full/async-iterator') === 'function');
  ok(typeof load('full/async-iterator/as-indexed-pairs') === 'function');
  ok(typeof load('full/async-iterator/drop') === 'function');
  ok(typeof load('full/async-iterator/every') === 'function');
  ok(typeof load('full/async-iterator/filter') === 'function');
  ok(typeof load('full/async-iterator/find') === 'function');
  ok(typeof load('full/async-iterator/flat-map') === 'function');
  ok(typeof load('full/async-iterator/for-each') === 'function');
  ok(typeof load('full/async-iterator/from') === 'function');
  ok(typeof load('full/async-iterator/map') === 'function');
  ok(typeof load('full/async-iterator/reduce') === 'function');
  ok(typeof load('full/async-iterator/some') === 'function');
  ok(typeof load('full/async-iterator/take') === 'function');
  ok(typeof load('full/async-iterator/to-array') === 'function');
  ok(typeof load('full/iterator') === 'function');
  ok(typeof load('full/iterator/as-indexed-pairs') === 'function');
  ok(typeof load('full/iterator/drop') === 'function');
  ok(typeof load('full/iterator/every') === 'function');
  ok(typeof load('full/iterator/filter') === 'function');
  ok(typeof load('full/iterator/find') === 'function');
  ok(typeof load('full/iterator/flat-map') === 'function');
  ok(typeof load('full/iterator/for-each') === 'function');
  ok(typeof load('full/iterator/from') === 'function');
  ok(typeof load('full/iterator/map') === 'function');
  ok(typeof load('full/iterator/reduce') === 'function');
  ok(typeof load('full/iterator/some') === 'function');
  ok(typeof load('full/iterator/take') === 'function');
  ok(typeof load('full/iterator/to-array') === 'function');
  ok(typeof load('full/url') === 'function');
  load('full/url/to-json');
  ok(typeof load('full/url-search-params') === 'function');
  ok(load('full/is-iterable')([]));
  ok(typeof load('full/get-iterator-method')([]) === 'function');
  ok('next' in load('full/get-iterator')([]));
  ok(load('full'));

  ok('Map' in load('es'));
  ok(typeof load('web/set-interval') === 'function');
  ok(typeof load('web/set-timeout') === 'function');
  ok(typeof load('web/clear-immediate') === 'function');
  ok(typeof load('web/set-immediate') === 'function');
  ok(typeof load('web/queue-microtask') === 'function');
  ok(typeof load('web/dom-collections').iterator === 'function');
  ok(typeof load('web/dom-collections/for-each') === 'function');
  ok(typeof load('web/dom-collections/iterator') === 'function');
  ok(typeof load('web/url') === 'function');
  load('web/url/to-json');
  ok(typeof load('web/url-search-params') === 'function');
  ok('setImmediate' in load('web'));
  load('proposals/array-filtering');
  load('proposals/array-find-from-last');
  load('proposals/array-is-template-object');
  load('proposals/array-last');
  load('proposals/array-unique');
  load('proposals/collection-methods');
  load('proposals/collection-of-from');
  load('proposals/iterator-helpers');
  load('proposals/keys-composition');
  load('proposals/map-upsert');
  load('proposals/math-extensions');
  load('proposals/math-signbit');
  load('proposals/number-from-string');
  load('proposals/number-range');
  load('proposals/observable');
  load('proposals/promise-try');
  load('proposals/reflect-metadata');
  load('proposals/relative-indexing-method');
  load('proposals/set-methods');
  load('proposals/string-code-points');
  load('proposals/url');
  load('proposals/using-statement');
  load('proposals');
  ok(load('stage/4'));
  ok(load('stage/3'));
  ok(load('stage/2'));
  ok(load('stage/1'));
  ok(load('stage/0'));
  ok(load('stage/pre'));
  ok(load('stage'));
  ok(load(''));

  let instanceAt = load('full/instance/at');
  ok(typeof instanceAt === 'function');
  ok(instanceAt({}) === undefined);
  ok(typeof instanceAt([]) === 'function');
  ok(typeof instanceAt('') === 'function');
  ok(instanceAt([]).call([1, 2, 3], 2) === 3);
  ok(instanceAt('').call('123', 2) === '3');
  instanceAt = load('actual/instance/at');
  ok(typeof instanceAt === 'function');
  ok(instanceAt({}) === undefined);
  ok(typeof instanceAt([]) === 'function');
  ok(typeof instanceAt('') === 'function');
  ok(instanceAt([]).call([1, 2, 3], 2) === 3);
  ok(instanceAt('').call('123', 2) === '3');

  let instanceCodePointAt = load('full/instance/code-point-at');
  ok(typeof instanceCodePointAt === 'function');
  ok(instanceCodePointAt({}) === undefined);
  ok(typeof instanceCodePointAt('') === 'function');
  ok(instanceCodePointAt('').call('a', 0) === 97);
  instanceCodePointAt = load('actual/instance/code-point-at');
  ok(typeof instanceCodePointAt === 'function');
  ok(instanceCodePointAt({}) === undefined);
  ok(typeof instanceCodePointAt('') === 'function');
  ok(instanceCodePointAt('').call('a', 0) === 97);
  instanceCodePointAt = load('stable/instance/code-point-at');
  ok(typeof instanceCodePointAt === 'function');
  ok(instanceCodePointAt({}) === undefined);
  ok(typeof instanceCodePointAt('') === 'function');
  ok(instanceCodePointAt('').call('a', 0) === 97);
  instanceCodePointAt = load('es/instance/code-point-at');
  ok(typeof instanceCodePointAt === 'function');
  ok(instanceCodePointAt({}) === undefined);
  ok(typeof instanceCodePointAt('') === 'function');
  ok(instanceCodePointAt('').call('a', 0) === 97);

  const instanceCodePoints = load('full/instance/code-points');
  ok(typeof instanceCodePoints === 'function');
  ok(instanceCodePoints({}) === undefined);
  ok(typeof instanceCodePoints('') === 'function');
  ok(instanceCodePoints('').call('abc').next().value.codePoint === 97);

  let instanceConcat = load('full/instance/concat');
  ok(typeof instanceConcat === 'function');
  ok(instanceConcat({}) === undefined);
  ok(typeof instanceConcat([]) === 'function');
  ok(instanceConcat([]).call([1, 2, 3], [4, 5, 6]).length === 6);
  instanceConcat = load('actual/instance/concat');
  ok(typeof instanceConcat === 'function');
  ok(instanceConcat({}) === undefined);
  ok(typeof instanceConcat([]) === 'function');
  ok(instanceConcat([]).call([1, 2, 3], [4, 5, 6]).length === 6);
  instanceConcat = load('stable/instance/concat');
  ok(typeof instanceConcat === 'function');
  ok(instanceConcat({}) === undefined);
  ok(typeof instanceConcat([]) === 'function');
  ok(instanceConcat([]).call([1, 2, 3], [4, 5, 6]).length === 6);
  instanceConcat = load('es/instance/concat');
  ok(typeof instanceConcat === 'function');
  ok(instanceConcat({}) === undefined);
  ok(typeof instanceConcat([]) === 'function');
  ok(instanceConcat([]).call([1, 2, 3], [4, 5, 6]).length === 6);

  let instanceCopyWithin = load('full/instance/copy-within');
  ok(typeof instanceCopyWithin === 'function');
  ok(instanceCopyWithin({}) === undefined);
  ok(typeof instanceCopyWithin([]) === 'function');
  ok(instanceCopyWithin([]).call([1, 2, 3, 4, 5], 0, 3)[0] === 4);
  instanceCopyWithin = load('actual/instance/copy-within');
  ok(typeof instanceCopyWithin === 'function');
  ok(instanceCopyWithin({}) === undefined);
  ok(typeof instanceCopyWithin([]) === 'function');
  ok(instanceCopyWithin([]).call([1, 2, 3, 4, 5], 0, 3)[0] === 4);
  instanceCopyWithin = load('stable/instance/copy-within');
  ok(typeof instanceCopyWithin === 'function');
  ok(instanceCopyWithin({}) === undefined);
  ok(typeof instanceCopyWithin([]) === 'function');
  ok(instanceCopyWithin([]).call([1, 2, 3, 4, 5], 0, 3)[0] === 4);
  instanceCopyWithin = load('es/instance/copy-within');
  ok(typeof instanceCopyWithin === 'function');
  ok(instanceCopyWithin({}) === undefined);
  ok(typeof instanceCopyWithin([]) === 'function');
  ok(instanceCopyWithin([]).call([1, 2, 3, 4, 5], 0, 3)[0] === 4);

  let instanceEndsWith = load('full/instance/ends-with');
  ok(typeof instanceEndsWith === 'function');
  ok(instanceEndsWith({}) === undefined);
  ok(typeof instanceEndsWith('') === 'function');
  ok(instanceEndsWith('').call('qwe', 'we'));
  instanceEndsWith = load('actual/instance/ends-with');
  ok(typeof instanceEndsWith === 'function');
  ok(instanceEndsWith({}) === undefined);
  ok(typeof instanceEndsWith('') === 'function');
  ok(instanceEndsWith('').call('qwe', 'we'));
  instanceEndsWith = load('stable/instance/ends-with');
  ok(typeof instanceEndsWith === 'function');
  ok(instanceEndsWith({}) === undefined);
  ok(typeof instanceEndsWith('') === 'function');
  ok(instanceEndsWith('').call('qwe', 'we'));
  instanceEndsWith = load('es/instance/ends-with');
  ok(typeof instanceEndsWith === 'function');
  ok(instanceEndsWith({}) === undefined);
  ok(typeof instanceEndsWith('') === 'function');
  ok(instanceEndsWith('').call('qwe', 'we'));

  let instanceEntries = load('full/instance/entries');
  ok(typeof instanceEntries === 'function');
  ok(instanceEntries({}) === undefined);
  ok(typeof instanceEntries([]) === 'function');
  ok(instanceEntries([]).call([1, 2, 3]).next().value[1] === 1);
  instanceEntries = load('actual/instance/entries');
  ok(typeof instanceEntries === 'function');
  ok(instanceEntries({}) === undefined);
  ok(typeof instanceEntries([]) === 'function');
  ok(instanceEntries([]).call([1, 2, 3]).next().value[1] === 1);
  instanceEntries = load('stable/instance/entries');
  ok(typeof instanceEntries === 'function');
  ok(instanceEntries({}) === undefined);
  ok(typeof instanceEntries([]) === 'function');
  ok(instanceEntries([]).call([1, 2, 3]).next().value[1] === 1);
  instanceEntries = load('es/instance/entries');
  ok(typeof instanceEntries === 'function');
  ok(instanceEntries({}) === undefined);
  ok(typeof instanceEntries([]) === 'function');
  ok(instanceEntries([]).call([1, 2, 3]).next().value[1] === 1);

  let instanceEvery = load('full/instance/every');
  ok(typeof instanceEvery === 'function');
  ok(instanceEvery({}) === undefined);
  ok(typeof instanceEvery([]) === 'function');
  ok(instanceEvery([]).call([1, 2, 3], it => typeof it === 'number'));
  instanceEvery = load('actual/instance/every');
  ok(typeof instanceEvery === 'function');
  ok(instanceEvery({}) === undefined);
  ok(typeof instanceEvery([]) === 'function');
  ok(instanceEvery([]).call([1, 2, 3], it => typeof it === 'number'));
  instanceEvery = load('stable/instance/every');
  ok(typeof instanceEvery === 'function');
  ok(instanceEvery({}) === undefined);
  ok(typeof instanceEvery([]) === 'function');
  ok(instanceEvery([]).call([1, 2, 3], it => typeof it === 'number'));
  instanceEvery = load('es/instance/every');
  ok(typeof instanceEvery === 'function');
  ok(instanceEvery({}) === undefined);
  ok(typeof instanceEvery([]) === 'function');
  ok(instanceEvery([]).call([1, 2, 3], it => typeof it === 'number'));

  let instanceFill = load('full/instance/fill');
  ok(typeof instanceFill === 'function');
  ok(instanceFill({}) === undefined);
  ok(typeof instanceFill([]) === 'function');
  ok(instanceFill([]).call(Array(5), 42)[3] === 42);
  instanceFill = load('actual/instance/fill');
  ok(typeof instanceFill === 'function');
  ok(instanceFill({}) === undefined);
  ok(typeof instanceFill([]) === 'function');
  ok(instanceFill([]).call(Array(5), 42)[3] === 42);
  instanceFill = load('stable/instance/fill');
  ok(typeof instanceFill === 'function');
  ok(instanceFill({}) === undefined);
  ok(typeof instanceFill([]) === 'function');
  ok(instanceFill([]).call(Array(5), 42)[3] === 42);
  instanceFill = load('es/instance/fill');
  ok(typeof instanceFill === 'function');
  ok(instanceFill({}) === undefined);
  ok(typeof instanceFill([]) === 'function');
  ok(instanceFill([]).call(Array(5), 42)[3] === 42);

  let instanceFilter = load('full/instance/filter');
  ok(typeof instanceFilter === 'function');
  ok(instanceFilter({}) === undefined);
  ok(typeof instanceFilter([]) === 'function');
  ok(instanceFilter([]).call([1, 2, 3], it => it % 2).length === 2);
  instanceFilter = load('actual/instance/filter');
  ok(typeof instanceFilter === 'function');
  ok(instanceFilter({}) === undefined);
  ok(typeof instanceFilter([]) === 'function');
  ok(instanceFilter([]).call([1, 2, 3], it => it % 2).length === 2);
  instanceFilter = load('stable/instance/filter');
  ok(typeof instanceFilter === 'function');
  ok(instanceFilter({}) === undefined);
  ok(typeof instanceFilter([]) === 'function');
  ok(instanceFilter([]).call([1, 2, 3], it => it % 2).length === 2);
  instanceFilter = load('es/instance/filter');
  ok(typeof instanceFilter === 'function');
  ok(instanceFilter({}) === undefined);
  ok(typeof instanceFilter([]) === 'function');
  ok(instanceFilter([]).call([1, 2, 3], it => it % 2).length === 2);

  const instanceFilterOut = load('full/instance/filter-out');
  ok(typeof instanceFilterOut === 'function');
  ok(instanceFilterOut({}) === undefined);
  ok(typeof instanceFilterOut([]) === 'function');
  ok(instanceFilterOut([]).call([1, 2, 3], it => it % 2).length === 1);

  let instanceFindIndex = load('full/instance/find-index');
  ok(typeof instanceFindIndex === 'function');
  ok(instanceFindIndex({}) === undefined);
  ok(typeof instanceFindIndex([]) === 'function');
  ok(instanceFindIndex([]).call([1, 2, 3], it => it % 2) === 0);
  instanceFindIndex = load('actual/instance/find-index');
  ok(typeof instanceFindIndex === 'function');
  ok(instanceFindIndex({}) === undefined);
  ok(typeof instanceFindIndex([]) === 'function');
  ok(instanceFindIndex([]).call([1, 2, 3], it => it % 2) === 0);
  instanceFindIndex = load('stable/instance/find-index');
  ok(typeof instanceFindIndex === 'function');
  ok(instanceFindIndex({}) === undefined);
  ok(typeof instanceFindIndex([]) === 'function');
  ok(instanceFindIndex([]).call([1, 2, 3], it => it % 2) === 0);
  instanceFindIndex = load('es/instance/find-index');
  ok(typeof instanceFindIndex === 'function');
  ok(instanceFindIndex({}) === undefined);
  ok(typeof instanceFindIndex([]) === 'function');
  ok(instanceFindIndex([]).call([1, 2, 3], it => it % 2) === 0);

  let instanceFind = load('full/instance/find');
  ok(typeof instanceFind === 'function');
  ok(instanceFind({}) === undefined);
  ok(typeof instanceFind([]) === 'function');
  ok(instanceFind([]).call([1, 2, 3], it => it % 2) === 1);
  instanceFind = load('actual/instance/find');
  ok(typeof instanceFind === 'function');
  ok(instanceFind({}) === undefined);
  ok(typeof instanceFind([]) === 'function');
  ok(instanceFind([]).call([1, 2, 3], it => it % 2) === 1);
  instanceFind = load('stable/instance/find');
  ok(typeof instanceFind === 'function');
  ok(instanceFind({}) === undefined);
  ok(typeof instanceFind([]) === 'function');
  ok(instanceFind([]).call([1, 2, 3], it => it % 2) === 1);
  instanceFind = load('es/instance/find');
  ok(typeof instanceFind === 'function');
  ok(instanceFind({}) === undefined);
  ok(typeof instanceFind([]) === 'function');
  ok(instanceFind([]).call([1, 2, 3], it => it % 2) === 1);

  const instanceFindLastIndex = load('full/instance/find-last-index');
  ok(typeof instanceFindLastIndex === 'function');
  ok(instanceFindLastIndex({}) === undefined);
  ok(typeof instanceFindLastIndex([]) === 'function');
  ok(instanceFindLastIndex([]).call([1, 2, 3], it => it % 2) === 2);

  const instanceFindLast = load('full/instance/find-last');
  ok(typeof instanceFindLast === 'function');
  ok(instanceFindLast({}) === undefined);
  ok(typeof instanceFindLast([]) === 'function');
  ok(instanceFindLast([]).call([1, 2, 3], it => it % 2) === 3);

  let instanceFlags = load('full/instance/flags');
  ok(typeof instanceFlags === 'function');
  ok(instanceFlags({}) === undefined);
  ok(instanceFlags(/./g) === 'g');
  instanceFlags = load('actual/instance/flags');
  ok(typeof instanceFlags === 'function');
  ok(instanceFlags({}) === undefined);
  ok(instanceFlags(/./g) === 'g');
  instanceFlags = load('stable/instance/flags');
  ok(typeof instanceFlags === 'function');
  ok(instanceFlags({}) === undefined);
  ok(instanceFlags(/./g) === 'g');
  instanceFlags = load('es/instance/flags');
  ok(typeof instanceFlags === 'function');
  ok(instanceFlags({}) === undefined);
  ok(instanceFlags(/./g) === 'g');

  let instanceFlatMap = load('full/instance/flat-map');
  ok(typeof instanceFlatMap === 'function');
  ok(instanceFlatMap({}) === undefined);
  ok(typeof instanceFlatMap([]) === 'function');
  ok(instanceFlatMap([]).call([1, 2, 3], (v, i) => [v, i]).length === 6);
  instanceFlatMap = load('actual/instance/flat-map');
  ok(typeof instanceFlatMap === 'function');
  ok(instanceFlatMap({}) === undefined);
  ok(typeof instanceFlatMap([]) === 'function');
  ok(instanceFlatMap([]).call([1, 2, 3], (v, i) => [v, i]).length === 6);
  instanceFlatMap = load('stable/instance/flat-map');
  ok(typeof instanceFlatMap === 'function');
  ok(instanceFlatMap({}) === undefined);
  ok(typeof instanceFlatMap([]) === 'function');
  ok(instanceFlatMap([]).call([1, 2, 3], (v, i) => [v, i]).length === 6);
  instanceFlatMap = load('es/instance/flat-map');
  ok(typeof instanceFlatMap === 'function');
  ok(instanceFlatMap({}) === undefined);
  ok(typeof instanceFlatMap([]) === 'function');
  ok(instanceFlatMap([]).call([1, 2, 3], (v, i) => [v, i]).length === 6);

  let instanceFlat = load('full/instance/flat');
  ok(typeof instanceFlat === 'function');
  ok(instanceFlat({}) === undefined);
  ok(typeof instanceFlat([]) === 'function');
  ok(instanceFlat([]).call([1, [2, 3], [4, [5, [6]]]]).length === 5);
  instanceFlat = load('actual/instance/flat');
  ok(typeof instanceFlat === 'function');
  ok(instanceFlat({}) === undefined);
  ok(typeof instanceFlat([]) === 'function');
  ok(instanceFlat([]).call([1, [2, 3], [4, [5, [6]]]]).length === 5);
  instanceFlat = load('stable/instance/flat');
  ok(typeof instanceFlat === 'function');
  ok(instanceFlat({}) === undefined);
  ok(typeof instanceFlat([]) === 'function');
  ok(instanceFlat([]).call([1, [2, 3], [4, [5, [6]]]]).length === 5);
  instanceFlat = load('es/instance/flat');
  ok(typeof instanceFlat === 'function');
  ok(instanceFlat({}) === undefined);
  ok(typeof instanceFlat([]) === 'function');
  ok(instanceFlat([]).call([1, [2, 3], [4, [5, [6]]]]).length === 5);

  let instanceForEach = load('full/instance/for-each');
  ok(typeof instanceForEach === 'function');
  ok(instanceForEach({}) === undefined);
  ok(typeof instanceForEach([]) === 'function');
  instanceForEach = load('actual/instance/for-each');
  ok(typeof instanceForEach === 'function');
  ok(instanceForEach({}) === undefined);
  ok(typeof instanceForEach([]) === 'function');
  instanceForEach = load('stable/instance/for-each');
  ok(typeof instanceForEach === 'function');
  ok(instanceForEach({}) === undefined);
  ok(typeof instanceForEach([]) === 'function');
  instanceForEach = load('es/instance/for-each');
  ok(typeof instanceForEach === 'function');
  ok(instanceForEach({}) === undefined);
  ok(typeof instanceForEach([]) === 'function');

  let instanceIncludes = load('full/instance/includes');
  ok(typeof instanceIncludes === 'function');
  ok(instanceIncludes({}) === undefined);
  ok(typeof instanceIncludes([]) === 'function');
  ok(typeof instanceIncludes('') === 'function');
  ok(instanceIncludes([]).call([1, 2, 3], 2));
  ok(instanceIncludes('').call('123', '2'));
  instanceIncludes = load('actual/instance/includes');
  ok(typeof instanceIncludes === 'function');
  ok(instanceIncludes({}) === undefined);
  ok(typeof instanceIncludes([]) === 'function');
  ok(typeof instanceIncludes('') === 'function');
  ok(instanceIncludes([]).call([1, 2, 3], 2));
  ok(instanceIncludes('').call('123', '2'));
  instanceIncludes = load('stable/instance/includes');
  ok(typeof instanceIncludes === 'function');
  ok(instanceIncludes({}) === undefined);
  ok(typeof instanceIncludes([]) === 'function');
  ok(typeof instanceIncludes('') === 'function');
  ok(instanceIncludes([]).call([1, 2, 3], 2));
  ok(instanceIncludes('').call('123', '2'));
  instanceIncludes = load('es/instance/includes');
  ok(typeof instanceIncludes === 'function');
  ok(instanceIncludes({}) === undefined);
  ok(typeof instanceIncludes([]) === 'function');
  ok(typeof instanceIncludes('') === 'function');
  ok(instanceIncludes([]).call([1, 2, 3], 2));
  ok(instanceIncludes('').call('123', '2'));

  let instanceIndexOf = load('full/instance/index-of');
  ok(typeof instanceIndexOf === 'function');
  ok(instanceIndexOf({}) === undefined);
  ok(typeof instanceIndexOf([]) === 'function');
  ok(instanceIndexOf([]).call([1, 2, 3], 2) === 1);
  instanceIndexOf = load('actual/instance/index-of');
  ok(typeof instanceIndexOf === 'function');
  ok(instanceIndexOf({}) === undefined);
  ok(typeof instanceIndexOf([]) === 'function');
  ok(instanceIndexOf([]).call([1, 2, 3], 2) === 1);
  instanceIndexOf = load('stable/instance/index-of');
  ok(typeof instanceIndexOf === 'function');
  ok(instanceIndexOf({}) === undefined);
  ok(typeof instanceIndexOf([]) === 'function');
  ok(instanceIndexOf([]).call([1, 2, 3], 2) === 1);
  instanceIndexOf = load('es/instance/index-of');
  ok(typeof instanceIndexOf === 'function');
  ok(instanceIndexOf({}) === undefined);
  ok(typeof instanceIndexOf([]) === 'function');
  ok(instanceIndexOf([]).call([1, 2, 3], 2) === 1);

  let instanceKeys = load('full/instance/keys');
  ok(typeof instanceKeys === 'function');
  ok(instanceKeys({}) === undefined);
  ok(typeof instanceKeys([]) === 'function');
  ok(instanceKeys([]).call([1, 2, 3]).next().value === 0);
  instanceKeys = load('actual/instance/keys');
  ok(typeof instanceKeys === 'function');
  ok(instanceKeys({}) === undefined);
  ok(typeof instanceKeys([]) === 'function');
  ok(instanceKeys([]).call([1, 2, 3]).next().value === 0);
  instanceKeys = load('stable/instance/keys');
  ok(typeof instanceKeys === 'function');
  ok(instanceKeys({}) === undefined);
  ok(typeof instanceKeys([]) === 'function');
  ok(instanceKeys([]).call([1, 2, 3]).next().value === 0);
  instanceKeys = load('es/instance/keys');
  ok(typeof instanceKeys === 'function');
  ok(instanceKeys({}) === undefined);
  ok(typeof instanceKeys([]) === 'function');
  ok(instanceKeys([]).call([1, 2, 3]).next().value === 0);

  let instanceLastIndexOf = load('full/instance/last-index-of');
  ok(typeof instanceLastIndexOf === 'function');
  ok(instanceLastIndexOf({}) === undefined);
  ok(typeof instanceLastIndexOf([]) === 'function');
  ok(instanceLastIndexOf([]).call([1, 2, 3], 2) === 1);
  instanceLastIndexOf = load('actual/instance/last-index-of');
  ok(typeof instanceLastIndexOf === 'function');
  ok(instanceLastIndexOf({}) === undefined);
  ok(typeof instanceLastIndexOf([]) === 'function');
  ok(instanceLastIndexOf([]).call([1, 2, 3], 2) === 1);
  instanceLastIndexOf = load('stable/instance/last-index-of');
  ok(typeof instanceLastIndexOf === 'function');
  ok(instanceLastIndexOf({}) === undefined);
  ok(typeof instanceLastIndexOf([]) === 'function');
  ok(instanceLastIndexOf([]).call([1, 2, 3], 2) === 1);
  instanceLastIndexOf = load('es/instance/last-index-of');
  ok(typeof instanceLastIndexOf === 'function');
  ok(instanceLastIndexOf({}) === undefined);
  ok(typeof instanceLastIndexOf([]) === 'function');
  ok(instanceLastIndexOf([]).call([1, 2, 3], 2) === 1);

  let instanceMap = load('full/instance/map');
  ok(typeof instanceMap === 'function');
  ok(instanceMap({}) === undefined);
  ok(typeof instanceMap([]) === 'function');
  ok(instanceMap([]).call([1, 2, 3], it => it % 2)[1] === 0);
  instanceMap = load('actual/instance/map');
  ok(typeof instanceMap === 'function');
  ok(instanceMap({}) === undefined);
  ok(typeof instanceMap([]) === 'function');
  ok(instanceMap([]).call([1, 2, 3], it => it % 2)[1] === 0);
  instanceMap = load('stable/instance/map');
  ok(typeof instanceMap === 'function');
  ok(instanceMap({}) === undefined);
  ok(typeof instanceMap([]) === 'function');
  ok(instanceMap([]).call([1, 2, 3], it => it % 2)[1] === 0);
  instanceMap = load('es/instance/map');
  ok(typeof instanceMap === 'function');
  ok(instanceMap({}) === undefined);
  ok(typeof instanceMap([]) === 'function');
  ok(instanceMap([]).call([1, 2, 3], it => it % 2)[1] === 0);

  let instanceMatchAll = load('full/instance/match-all');
  ok(typeof instanceMatchAll === 'function');
  ok(instanceMatchAll({}) === undefined);
  ok(typeof instanceMatchAll('') === 'function');
  ok(instanceMatchAll('').call('test1test2', /t(e)(st(\d?))/g).next().value[0] === 'test1');
  instanceMatchAll = load('actual/instance/match-all');
  ok(typeof instanceMatchAll === 'function');
  ok(instanceMatchAll({}) === undefined);
  ok(typeof instanceMatchAll('') === 'function');
  ok(instanceMatchAll('').call('test1test2', /t(e)(st(\d?))/g).next().value[0] === 'test1');
  instanceMatchAll = load('stable/instance/match-all');
  ok(typeof instanceMatchAll === 'function');
  ok(instanceMatchAll({}) === undefined);
  ok(typeof instanceMatchAll('') === 'function');
  ok(instanceMatchAll('').call('test1test2', /t(e)(st(\d?))/g).next().value[0] === 'test1');
  instanceMatchAll = load('es/instance/match-all');
  ok(typeof instanceMatchAll === 'function');
  ok(instanceMatchAll({}) === undefined);
  ok(typeof instanceMatchAll('') === 'function');
  ok(instanceMatchAll('').call('test1test2', /t(e)(st(\d?))/g).next().value[0] === 'test1');

  let instancePadEnd = load('full/instance/pad-end');
  ok(typeof instancePadEnd === 'function');
  ok(instancePadEnd({}) === undefined);
  ok(typeof instancePadEnd('') === 'function');
  ok(instancePadEnd('').call('a', 3, 'b') === 'abb');
  instancePadEnd = load('actual/instance/pad-end');
  ok(typeof instancePadEnd === 'function');
  ok(instancePadEnd({}) === undefined);
  ok(typeof instancePadEnd('') === 'function');
  ok(instancePadEnd('').call('a', 3, 'b') === 'abb');
  instancePadEnd = load('stable/instance/pad-end');
  ok(typeof instancePadEnd === 'function');
  ok(instancePadEnd({}) === undefined);
  ok(typeof instancePadEnd('') === 'function');
  ok(instancePadEnd('').call('a', 3, 'b') === 'abb');
  instancePadEnd = load('es/instance/pad-end');
  ok(typeof instancePadEnd === 'function');
  ok(instancePadEnd({}) === undefined);
  ok(typeof instancePadEnd('') === 'function');
  ok(instancePadEnd('').call('a', 3, 'b') === 'abb');

  let instancePadStart = load('full/instance/pad-start');
  ok(typeof instancePadStart === 'function');
  ok(instancePadStart({}) === undefined);
  ok(typeof instancePadStart('') === 'function');
  ok(instancePadStart('').call('a', 3, 'b') === 'bba');
  instancePadStart = load('actual/instance/pad-start');
  ok(typeof instancePadStart === 'function');
  ok(instancePadStart({}) === undefined);
  ok(typeof instancePadStart('') === 'function');
  ok(instancePadStart('').call('a', 3, 'b') === 'bba');
  instancePadStart = load('stable/instance/pad-start');
  ok(typeof instancePadStart === 'function');
  ok(instancePadStart({}) === undefined);
  ok(typeof instancePadStart('') === 'function');
  ok(instancePadStart('').call('a', 3, 'b') === 'bba');
  instancePadStart = load('es/instance/pad-start');
  ok(typeof instancePadStart === 'function');
  ok(instancePadStart({}) === undefined);
  ok(typeof instancePadStart('') === 'function');
  ok(instancePadStart('').call('a', 3, 'b') === 'bba');

  let instanceReduceRight = load('full/instance/reduce-right');
  ok(typeof instanceReduceRight === 'function');
  ok(instanceReduceRight({}) === undefined);
  ok(typeof instanceReduceRight([]) === 'function');
  ok(instanceReduceRight([]).call([1, 2, 3], (memo, it) => it + memo, '') === '123');
  instanceReduceRight = load('actual/instance/reduce-right');
  ok(typeof instanceReduceRight === 'function');
  ok(instanceReduceRight({}) === undefined);
  ok(typeof instanceReduceRight([]) === 'function');
  ok(instanceReduceRight([]).call([1, 2, 3], (memo, it) => it + memo, '') === '123');
  instanceReduceRight = load('stable/instance/reduce-right');
  ok(typeof instanceReduceRight === 'function');
  ok(instanceReduceRight({}) === undefined);
  ok(typeof instanceReduceRight([]) === 'function');
  ok(instanceReduceRight([]).call([1, 2, 3], (memo, it) => it + memo, '') === '123');
  instanceReduceRight = load('es/instance/reduce-right');
  ok(typeof instanceReduceRight === 'function');
  ok(instanceReduceRight({}) === undefined);
  ok(typeof instanceReduceRight([]) === 'function');
  ok(instanceReduceRight([]).call([1, 2, 3], (memo, it) => it + memo, '') === '123');

  let instanceReduce = load('full/instance/reduce');
  ok(typeof instanceReduce === 'function');
  ok(instanceReduce({}) === undefined);
  ok(typeof instanceReduce([]) === 'function');
  ok(instanceReduce([]).call([1, 2, 3], (memo, it) => it + memo, '') === '321');
  instanceReduce = load('actual/instance/reduce');
  ok(typeof instanceReduce === 'function');
  ok(instanceReduce({}) === undefined);
  ok(typeof instanceReduce([]) === 'function');
  ok(instanceReduce([]).call([1, 2, 3], (memo, it) => it + memo, '') === '321');
  instanceReduce = load('stable/instance/reduce');
  ok(typeof instanceReduce === 'function');
  ok(instanceReduce({}) === undefined);
  ok(typeof instanceReduce([]) === 'function');
  ok(instanceReduce([]).call([1, 2, 3], (memo, it) => it + memo, '') === '321');
  instanceReduce = load('es/instance/reduce');
  ok(typeof instanceReduce === 'function');
  ok(instanceReduce({}) === undefined);
  ok(typeof instanceReduce([]) === 'function');
  ok(instanceReduce([]).call([1, 2, 3], (memo, it) => it + memo, '') === '321');

  let instanceRepeat = load('full/instance/repeat');
  ok(typeof instanceRepeat === 'function');
  ok(instanceRepeat({}) === undefined);
  ok(typeof instanceRepeat('') === 'function');
  ok(instanceRepeat('').call('a', 3) === 'aaa');
  instanceRepeat = load('actual/instance/repeat');
  ok(typeof instanceRepeat === 'function');
  ok(instanceRepeat({}) === undefined);
  ok(typeof instanceRepeat('') === 'function');
  ok(instanceRepeat('').call('a', 3) === 'aaa');
  instanceRepeat = load('stable/instance/repeat');
  ok(typeof instanceRepeat === 'function');
  ok(instanceRepeat({}) === undefined);
  ok(typeof instanceRepeat('') === 'function');
  ok(instanceRepeat('').call('a', 3) === 'aaa');
  instanceRepeat = load('es/instance/repeat');
  ok(typeof instanceRepeat === 'function');
  ok(instanceRepeat({}) === undefined);
  ok(typeof instanceRepeat('') === 'function');
  ok(instanceRepeat('').call('a', 3) === 'aaa');

  let instanceReplaceAll = load('full/instance/replace-all');
  ok(typeof instanceReplaceAll === 'function');
  ok(instanceReplaceAll({}) === undefined);
  ok(typeof instanceReplaceAll('') === 'function');
  ok(instanceReplaceAll('').call('aba', 'a', 'c') === 'cbc');
  instanceReplaceAll = load('actual/instance/replace-all');
  ok(typeof instanceReplaceAll === 'function');
  ok(instanceReplaceAll({}) === undefined);
  ok(typeof instanceReplaceAll('') === 'function');
  ok(instanceReplaceAll('').call('aba', 'a', 'c') === 'cbc');
  instanceReplaceAll = load('stable/instance/replace-all');
  ok(typeof instanceReplaceAll === 'function');
  ok(instanceReplaceAll({}) === undefined);
  ok(typeof instanceReplaceAll('') === 'function');
  ok(instanceReplaceAll('').call('aba', 'a', 'c') === 'cbc');
  instanceReplaceAll = load('es/instance/replace-all');
  ok(typeof instanceReplaceAll === 'function');
  ok(instanceReplaceAll({}) === undefined);
  ok(typeof instanceReplaceAll('') === 'function');
  ok(instanceReplaceAll('').call('aba', 'a', 'c') === 'cbc');

  let instanceReverse = load('full/instance/reverse');
  ok(typeof instanceReverse === 'function');
  ok(instanceReverse({}) === undefined);
  ok(typeof instanceReverse([]) === 'function');
  instanceReverse = load('actual/instance/reverse');
  ok(typeof instanceReverse === 'function');
  ok(instanceReverse({}) === undefined);
  ok(typeof instanceReverse([]) === 'function');
  instanceReverse = load('stable/instance/reverse');
  ok(typeof instanceReverse === 'function');
  ok(instanceReverse({}) === undefined);
  ok(typeof instanceReverse([]) === 'function');
  instanceReverse = load('es/instance/reverse');
  ok(typeof instanceReverse === 'function');
  ok(instanceReverse({}) === undefined);
  ok(typeof instanceReverse([]) === 'function');

  let instanceSlice = load('full/instance/slice');
  ok(typeof instanceSlice === 'function');
  ok(instanceSlice({}) === undefined);
  ok(typeof instanceSlice([]) === 'function');
  instanceSlice = load('actual/instance/slice');
  ok(typeof instanceSlice === 'function');
  ok(instanceSlice({}) === undefined);
  ok(typeof instanceSlice([]) === 'function');
  instanceSlice = load('stable/instance/slice');
  ok(typeof instanceSlice === 'function');
  ok(instanceSlice({}) === undefined);
  ok(typeof instanceSlice([]) === 'function');
  instanceSlice = load('es/instance/slice');
  ok(typeof instanceSlice === 'function');
  ok(instanceSlice({}) === undefined);
  ok(typeof instanceSlice([]) === 'function');

  let instanceSome = load('full/instance/some');
  ok(typeof instanceSome === 'function');
  ok(instanceSome({}) === undefined);
  ok(typeof instanceSome([]) === 'function');
  ok(instanceSome([]).call([1, 2, 3], it => typeof it === 'number'));
  instanceSome = load('actual/instance/some');
  ok(typeof instanceSome === 'function');
  ok(instanceSome({}) === undefined);
  ok(typeof instanceSome([]) === 'function');
  ok(instanceSome([]).call([1, 2, 3], it => typeof it === 'number'));
  instanceSome = load('stable/instance/some');
  ok(typeof instanceSome === 'function');
  ok(instanceSome({}) === undefined);
  ok(typeof instanceSome([]) === 'function');
  ok(instanceSome([]).call([1, 2, 3], it => typeof it === 'number'));
  instanceSome = load('es/instance/some');
  ok(typeof instanceSome === 'function');
  ok(instanceSome({}) === undefined);
  ok(typeof instanceSome([]) === 'function');
  ok(instanceSome([]).call([1, 2, 3], it => typeof it === 'number'));

  let instanceSort = load('full/instance/sort');
  ok(typeof instanceSort === 'function');
  ok(instanceSort({}) === undefined);
  ok(typeof instanceSort([]) === 'function');
  instanceSort = load('actual/instance/sort');
  ok(typeof instanceSort === 'function');
  ok(instanceSort({}) === undefined);
  ok(typeof instanceSort([]) === 'function');
  instanceSort = load('stable/instance/sort');
  ok(typeof instanceSort === 'function');
  ok(instanceSort({}) === undefined);
  ok(typeof instanceSort([]) === 'function');
  instanceSort = load('es/instance/sort');
  ok(typeof instanceSort === 'function');
  ok(instanceSort({}) === undefined);
  ok(typeof instanceSort([]) === 'function');

  let instanceSplice = load('full/instance/splice');
  ok(typeof instanceSplice === 'function');
  ok(instanceSplice({}) === undefined);
  ok(typeof instanceSplice([]) === 'function');
  instanceSplice = load('actual/instance/splice');
  ok(typeof instanceSplice === 'function');
  ok(instanceSplice({}) === undefined);
  ok(typeof instanceSplice([]) === 'function');
  instanceSplice = load('stable/instance/splice');
  ok(typeof instanceSplice === 'function');
  ok(instanceSplice({}) === undefined);
  ok(typeof instanceSplice([]) === 'function');
  instanceSplice = load('es/instance/splice');
  ok(typeof instanceSplice === 'function');
  ok(instanceSplice({}) === undefined);
  ok(typeof instanceSplice([]) === 'function');

  let instanceStartsWith = load('full/instance/starts-with');
  ok(typeof instanceStartsWith === 'function');
  ok(instanceStartsWith({}) === undefined);
  ok(typeof instanceStartsWith('') === 'function');
  ok(instanceStartsWith('').call('qwe', 'qw'));
  instanceStartsWith = load('actual/instance/starts-with');
  ok(typeof instanceStartsWith === 'function');
  ok(instanceStartsWith({}) === undefined);
  ok(typeof instanceStartsWith('') === 'function');
  ok(instanceStartsWith('').call('qwe', 'qw'));
  instanceStartsWith = load('stable/instance/starts-with');
  ok(typeof instanceStartsWith === 'function');
  ok(instanceStartsWith({}) === undefined);
  ok(typeof instanceStartsWith('') === 'function');
  ok(instanceStartsWith('').call('qwe', 'qw'));
  instanceStartsWith = load('es/instance/starts-with');
  ok(typeof instanceStartsWith === 'function');
  ok(instanceStartsWith({}) === undefined);
  ok(typeof instanceStartsWith('') === 'function');
  ok(instanceStartsWith('').call('qwe', 'qw'));

  let instanceTrimEnd = load('full/instance/trim-end');
  ok(typeof instanceTrimEnd === 'function');
  ok(instanceTrimEnd({}) === undefined);
  ok(typeof instanceTrimEnd('') === 'function');
  ok(instanceTrimEnd('').call(' 1 ') === ' 1');
  instanceTrimEnd = load('actual/instance/trim-end');
  ok(typeof instanceTrimEnd === 'function');
  ok(instanceTrimEnd({}) === undefined);
  ok(typeof instanceTrimEnd('') === 'function');
  ok(instanceTrimEnd('').call(' 1 ') === ' 1');
  instanceTrimEnd = load('stable/instance/trim-end');
  ok(typeof instanceTrimEnd === 'function');
  ok(instanceTrimEnd({}) === undefined);
  ok(typeof instanceTrimEnd('') === 'function');
  ok(instanceTrimEnd('').call(' 1 ') === ' 1');
  instanceTrimEnd = load('es/instance/trim-end');
  ok(typeof instanceTrimEnd === 'function');
  ok(instanceTrimEnd({}) === undefined);
  ok(typeof instanceTrimEnd('') === 'function');
  ok(instanceTrimEnd('').call(' 1 ') === ' 1');

  let instanceTrimLeft = load('full/instance/trim-left');
  ok(typeof instanceTrimLeft === 'function');
  ok(instanceTrimLeft({}) === undefined);
  ok(typeof instanceTrimLeft('') === 'function');
  ok(instanceTrimLeft('').call(' 1 ') === '1 ');
  instanceTrimLeft = load('actual/instance/trim-left');
  ok(typeof instanceTrimLeft === 'function');
  ok(instanceTrimLeft({}) === undefined);
  ok(typeof instanceTrimLeft('') === 'function');
  ok(instanceTrimLeft('').call(' 1 ') === '1 ');
  instanceTrimLeft = load('stable/instance/trim-left');
  ok(typeof instanceTrimLeft === 'function');
  ok(instanceTrimLeft({}) === undefined);
  ok(typeof instanceTrimLeft('') === 'function');
  ok(instanceTrimLeft('').call(' 1 ') === '1 ');
  instanceTrimLeft = load('es/instance/trim-left');
  ok(typeof instanceTrimLeft === 'function');
  ok(instanceTrimLeft({}) === undefined);
  ok(typeof instanceTrimLeft('') === 'function');
  ok(instanceTrimLeft('').call(' 1 ') === '1 ');

  let instanceTrimRight = load('full/instance/trim-right');
  ok(typeof instanceTrimRight === 'function');
  ok(instanceTrimRight({}) === undefined);
  ok(typeof instanceTrimRight('') === 'function');
  ok(instanceTrimRight('').call(' 1 ') === ' 1');
  instanceTrimRight = load('actual/instance/trim-right');
  ok(typeof instanceTrimRight === 'function');
  ok(instanceTrimRight({}) === undefined);
  ok(typeof instanceTrimRight('') === 'function');
  ok(instanceTrimRight('').call(' 1 ') === ' 1');
  instanceTrimRight = load('stable/instance/trim-right');
  ok(typeof instanceTrimRight === 'function');
  ok(instanceTrimRight({}) === undefined);
  ok(typeof instanceTrimRight('') === 'function');
  ok(instanceTrimRight('').call(' 1 ') === ' 1');
  instanceTrimRight = load('es/instance/trim-right');
  ok(typeof instanceTrimRight === 'function');
  ok(instanceTrimRight({}) === undefined);
  ok(typeof instanceTrimRight('') === 'function');
  ok(instanceTrimRight('').call(' 1 ') === ' 1');

  let instanceTrimStart = load('full/instance/trim-start');
  ok(typeof instanceTrimStart === 'function');
  ok(instanceTrimStart({}) === undefined);
  ok(typeof instanceTrimStart('') === 'function');
  ok(instanceTrimStart('').call(' 1 ') === '1 ');
  instanceTrimStart = load('actual/instance/trim-start');
  ok(typeof instanceTrimStart === 'function');
  ok(instanceTrimStart({}) === undefined);
  ok(typeof instanceTrimStart('') === 'function');
  ok(instanceTrimStart('').call(' 1 ') === '1 ');
  instanceTrimStart = load('stable/instance/trim-start');
  ok(typeof instanceTrimStart === 'function');
  ok(instanceTrimStart({}) === undefined);
  ok(typeof instanceTrimStart('') === 'function');
  ok(instanceTrimStart('').call(' 1 ') === '1 ');
  instanceTrimStart = load('es/instance/trim-start');
  ok(typeof instanceTrimStart === 'function');
  ok(instanceTrimStart({}) === undefined);
  ok(typeof instanceTrimStart('') === 'function');
  ok(instanceTrimStart('').call(' 1 ') === '1 ');

  let instanceTrim = load('full/instance/trim');
  ok(typeof instanceTrim === 'function');
  ok(instanceTrim({}) === undefined);
  ok(typeof instanceTrim('') === 'function');
  ok(instanceTrim('').call(' 1 ') === '1');
  instanceTrim = load('actual/instance/trim');
  ok(typeof instanceTrim === 'function');
  ok(instanceTrim({}) === undefined);
  ok(typeof instanceTrim('') === 'function');
  ok(instanceTrim('').call(' 1 ') === '1');
  instanceTrim = load('stable/instance/trim');
  ok(typeof instanceTrim === 'function');
  ok(instanceTrim({}) === undefined);
  ok(typeof instanceTrim('') === 'function');
  ok(instanceTrim('').call(' 1 ') === '1');
  instanceTrim = load('es/instance/trim');
  ok(typeof instanceTrim === 'function');
  ok(instanceTrim({}) === undefined);
  ok(typeof instanceTrim('') === 'function');
  ok(instanceTrim('').call(' 1 ') === '1');

  const instanceUniqueBy = load('full/instance/unique-by');
  ok(typeof instanceUniqueBy === 'function');
  ok(instanceUniqueBy({}) === undefined);
  ok(typeof instanceUniqueBy([]) === 'function');
  ok(instanceUniqueBy([]).call([1, 2, 3, 2, 1]).length === 3);

  let instanceValues = load('full/instance/values');
  ok(typeof instanceValues === 'function');
  ok(instanceValues({}) === undefined);
  ok(typeof instanceValues([]) === 'function');
  ok(instanceValues([]).call([1, 2, 3]).next().value === 1);
  instanceValues = load('actual/instance/values');
  ok(typeof instanceValues === 'function');
  ok(instanceValues({}) === undefined);
  ok(typeof instanceValues([]) === 'function');
  ok(instanceValues([]).call([1, 2, 3]).next().value === 1);
  instanceValues = load('stable/instance/values');
  ok(typeof instanceValues === 'function');
  ok(instanceValues({}) === undefined);
  ok(typeof instanceValues([]) === 'function');
  ok(instanceValues([]).call([1, 2, 3]).next().value === 1);
  instanceValues = load('es/instance/values');
  ok(typeof instanceValues === 'function');
  ok(instanceValues({}) === undefined);
  ok(typeof instanceValues([]) === 'function');
  ok(instanceValues([]).call([1, 2, 3]).next().value === 1);

  for (const key in compat) load('modules', key);
}

ok(typeof load('es/string/match') === 'function');
ok('next' in load('es/string/match-all')('a', /./g));
ok(typeof load('es/string/replace') === 'function');
ok(typeof load('es/string/search') === 'function');
ok(load('es/string/split')('a s d', ' ').length === 3);
ok(typeof load('es/array-buffer') === 'function');
ok(typeof load('es/array-buffer/constructor') === 'function');
ok(typeof load('es/array-buffer/is-view') === 'function');
load('es/array-buffer/slice');
ok(typeof load('es/data-view') === 'function');
ok(typeof load('es/typed-array/int8-array') === 'function');
ok(typeof load('es/typed-array/uint8-array') === 'function');
ok(typeof load('es/typed-array/uint8-clamped-array') === 'function');
ok(typeof load('es/typed-array/int16-array') === 'function');
ok(typeof load('es/typed-array/uint16-array') === 'function');
ok(typeof load('es/typed-array/int32-array') === 'function');
ok(typeof load('es/typed-array/uint32-array') === 'function');
ok(typeof load('es/typed-array/float32-array') === 'function');
ok(typeof load('es/typed-array/float64-array') === 'function');
load('es/typed-array/copy-within');
load('es/typed-array/entries');
load('es/typed-array/every');
load('es/typed-array/fill');
load('es/typed-array/filter');
load('es/typed-array/find');
load('es/typed-array/find-index');
load('es/typed-array/for-each');
load('es/typed-array/from');
load('es/typed-array/includes');
load('es/typed-array/index-of');
load('es/typed-array/iterator');
load('es/typed-array/join');
load('es/typed-array/keys');
load('es/typed-array/last-index-of');
load('es/typed-array/map');
load('es/typed-array/of');
load('es/typed-array/reduce');
load('es/typed-array/reduce-right');
load('es/typed-array/reverse');
load('es/typed-array/set');
load('es/typed-array/slice');
load('es/typed-array/some');
load('es/typed-array/sort');
load('es/typed-array/subarray');
load('es/typed-array/to-locale-string');
load('es/typed-array/to-string');
load('es/typed-array/values');
ok(typeof load('es/typed-array').Uint32Array === 'function');

ok(typeof load('stable/string/match') === 'function');
ok('next' in load('stable/string/match-all')('a', /./g));
ok(typeof load('stable/string/replace') === 'function');
ok(typeof load('stable/string/search') === 'function');
ok(load('stable/string/split')('a s d', ' ').length === 3);
ok(typeof load('stable/array-buffer') === 'function');
ok(typeof load('stable/array-buffer/constructor') === 'function');
ok(typeof load('stable/array-buffer/is-view') === 'function');
load('stable/array-buffer/slice');
ok(typeof load('stable/data-view') === 'function');
ok(typeof load('stable/typed-array/int8-array') === 'function');
ok(typeof load('stable/typed-array/uint8-array') === 'function');
ok(typeof load('stable/typed-array/uint8-clamped-array') === 'function');
ok(typeof load('stable/typed-array/int16-array') === 'function');
ok(typeof load('stable/typed-array/uint16-array') === 'function');
ok(typeof load('stable/typed-array/int32-array') === 'function');
ok(typeof load('stable/typed-array/uint32-array') === 'function');
ok(typeof load('stable/typed-array/float32-array') === 'function');
ok(typeof load('stable/typed-array/float64-array') === 'function');
load('stable/typed-array/copy-within');
load('stable/typed-array/entries');
load('stable/typed-array/every');
load('stable/typed-array/fill');
load('stable/typed-array/filter');
load('stable/typed-array/find');
load('stable/typed-array/find-index');
load('stable/typed-array/for-each');
load('stable/typed-array/from');
load('stable/typed-array/includes');
load('stable/typed-array/index-of');
load('stable/typed-array/iterator');
load('stable/typed-array/join');
load('stable/typed-array/keys');
load('stable/typed-array/last-index-of');
load('stable/typed-array/map');
load('stable/typed-array/of');
load('stable/typed-array/reduce');
load('stable/typed-array/reduce-right');
load('stable/typed-array/reverse');
load('stable/typed-array/set');
load('stable/typed-array/slice');
load('stable/typed-array/some');
load('stable/typed-array/sort');
load('stable/typed-array/subarray');
load('stable/typed-array/to-locale-string');
load('stable/typed-array/to-string');
load('stable/typed-array/values');
ok(typeof load('stable/typed-array').Uint32Array === 'function');

ok(typeof load('actual/string/match') === 'function');
ok('next' in load('actual/string/match-all')('a', /./g));
ok(typeof load('actual/string/replace') === 'function');
ok(typeof load('actual/string/search') === 'function');
ok(load('actual/string/split')('a s d', ' ').length === 3);
ok(typeof load('actual/array-buffer') === 'function');
ok(typeof load('actual/array-buffer/constructor') === 'function');
ok(typeof load('actual/array-buffer/is-view') === 'function');
load('actual/array-buffer/slice');
ok(typeof load('actual/data-view') === 'function');
ok(typeof load('actual/typed-array/int8-array') === 'function');
ok(typeof load('actual/typed-array/uint8-array') === 'function');
ok(typeof load('actual/typed-array/uint8-clamped-array') === 'function');
ok(typeof load('actual/typed-array/int16-array') === 'function');
ok(typeof load('actual/typed-array/uint16-array') === 'function');
ok(typeof load('actual/typed-array/int32-array') === 'function');
ok(typeof load('actual/typed-array/uint32-array') === 'function');
ok(typeof load('actual/typed-array/float32-array') === 'function');
ok(typeof load('actual/typed-array/float64-array') === 'function');
load('actual/typed-array/copy-within');
load('actual/typed-array/entries');
load('actual/typed-array/every');
load('actual/typed-array/fill');
load('actual/typed-array/filter');
load('actual/typed-array/find');
load('actual/typed-array/find-index');
load('actual/typed-array/for-each');
load('actual/typed-array/from');
load('actual/typed-array/includes');
load('actual/typed-array/index-of');
load('actual/typed-array/iterator');
load('actual/typed-array/join');
load('actual/typed-array/keys');
load('actual/typed-array/last-index-of');
load('actual/typed-array/map');
load('actual/typed-array/of');
load('actual/typed-array/reduce');
load('actual/typed-array/reduce-right');
load('actual/typed-array/reverse');
load('actual/typed-array/set');
load('actual/typed-array/slice');
load('actual/typed-array/some');
load('actual/typed-array/sort');
load('actual/typed-array/subarray');
load('actual/typed-array/to-locale-string');
load('actual/typed-array/to-string');
load('actual/typed-array/values');
ok(typeof load('actual/typed-array').Uint32Array === 'function');

ok(typeof load('full/string/match') === 'function');
ok(typeof load('full/string/replace') === 'function');
ok(typeof load('full/string/search') === 'function');
ok(load('full/string/split')('a s d', ' ').length === 3);
ok(typeof load('full/array-buffer') === 'function');
ok(typeof load('full/array-buffer/constructor') === 'function');
ok(typeof load('full/array-buffer/is-view') === 'function');
load('full/array-buffer/slice');
ok(typeof load('full/data-view') === 'function');
ok(typeof load('full/typed-array/int8-array') === 'function');
ok(typeof load('full/typed-array/uint8-array') === 'function');
ok(typeof load('full/typed-array/uint8-clamped-array') === 'function');
ok(typeof load('full/typed-array/int16-array') === 'function');
ok(typeof load('full/typed-array/uint16-array') === 'function');
ok(typeof load('full/typed-array/int32-array') === 'function');
ok(typeof load('full/typed-array/uint32-array') === 'function');
ok(typeof load('full/typed-array/float32-array') === 'function');
ok(typeof load('full/typed-array/float64-array') === 'function');
load('full/typed-array/at');
load('full/typed-array/copy-within');
load('full/typed-array/entries');
load('full/typed-array/every');
load('full/typed-array/fill');
load('full/typed-array/filter');
load('full/typed-array/filter-out');
load('full/typed-array/find');
load('full/typed-array/find-index');
load('full/typed-array/find-last');
load('full/typed-array/find-last-index');
load('full/typed-array/for-each');
load('full/typed-array/from');
load('full/typed-array/includes');
load('full/typed-array/index-of');
load('full/typed-array/iterator');
load('full/typed-array/join');
load('full/typed-array/keys');
load('full/typed-array/last-index-of');
load('full/typed-array/map');
load('full/typed-array/of');
load('full/typed-array/reduce');
load('full/typed-array/reduce-right');
load('full/typed-array/reverse');
load('full/typed-array/set');
load('full/typed-array/slice');
load('full/typed-array/some');
load('full/typed-array/sort');
load('full/typed-array/subarray');
load('full/typed-array/to-locale-string');
load('full/typed-array/to-string');
load('full/typed-array/unique-by');
load('full/typed-array/values');
ok(typeof load('full/typed-array').Uint32Array === 'function');

PATH = 'core-js-bundle';
load('');
load('actual');
load('actual.min');
load('full');
load('full.min');

// eslint-disable-next-line no-console -- output
console.log(`\u001B[32mtested ${ tested } commonjs entry points\u001B[0m`);
